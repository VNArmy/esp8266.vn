{
    "docs": [
        {
            "location": "/",
            "text": "Internet Of Things (IoT) v\u1edbi ESP8266\n#\n\n\n\u0110\u00e2y l\u00e0 Website cung c\u1ea5p ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n cho ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u l\u00e0m quen, l\u1eadp tr\u00ecnh cho ESP8266 theo c\u1ea5u tr\u00fac tu\u1ea7n t\u1ef1. Gi\u00fap ng\u01b0\u1eddi \u0111\u1ecdc c\u00f3 th\u1ec3 t\u1ef1 h\u1ecdc \u0111\u01b0\u1ee3c.\n\n\nN\u1ed9i dung Website n\u00e0y \u0111i theo h\u01b0\u1edbng c\u00f3 th\u1ec3 kh\u00f4ng ho\u00e0n to\u00e0n d\u1ec5 d\u00e0ng v\u1edbi ng\u01b0\u1eddi \u0111\u1ecdc, nh\u01b0ng xin l\u01b0u \u00fd r\u1eb1ng: Vi\u1ec7c h\u1ecdc t\u1eadp c\u00e1c ki\u1ebfn th\u1ee9c v\u1ec1 k\u1ef9 thu\u1eadt kh\u00f4ng bao gi\u1edd l\u00e0 d\u1ec5 d\u00e0ng. C\u1ea7n ph\u1ea3i c\u00f3 \u0111\u1ea7u t\u01b0 v\u00e0 y\u00eau th\u00edch \u0111\u00fang m\u1ef1c, l\u00fac \u0111\u00f3 chinh ph\u1ee5c nh\u1eefng th\u1eed th\u00e1ch v\u1ec1 tri th\u1ee9c lu\u00f4n lu\u00f4n \u0111\u1ed9ng l\u1ef1c gi\u00fap ta v\u01b0\u1ee3t qua\n\n\nB\u1edfi v\u00ec l\u00e0 t\u00e0i li\u1ec7u k\u1ef9 thu\u1eadt v\u00e0 c\u00f3 nhi\u1ec1u thu\u1eadt ng\u1eef kh\u00f4ng th\u1ec3/kh\u00f4ng n\u00ean d\u1ecbch ng\u1eef sang ti\u1ebfng Vi\u1ec7t, n\u00ean trong t\u00e0i li\u1ec7u s\u1ebd c\u00f3 nhi\u1ec1u \u0111o\u1ea1n v\u0103n b\u1ea3n s\u1eed d\u1ee5ng l\u1eabn l\u1ed9n c\u1ea3 thu\u1eadt ng\u1eef Ti\u1ebfng Anh v\u00e0 Ti\u1ebfng Vi\u1ec7t.\n\n\nN\u1ed9i dung v\u00e0 c\u00e1ch th\u1ee9c di\u1ec5n \u0111\u1ea1t v\u00e0 tr\u00ecnh b\u00e0y s\u00e1ch kh\u00f4ng h\u1ec1 d\u1ec5 d\u00e0ng nh\u01b0 ki\u1ec3u Arduino, Lua, hay k\u00e9o th\u1ea3 nh\u01b0 c\u00e1c d\u1ecbch v\u1ee5 s\u1eb5n c\u00f3. N\u00f3 s\u1ebd \u0111i s\u00e2u h\u01a1n v\u00e0o chi ti\u1ebft v\u00e0 gi\u00fap b\u1ea1n hi\u1ec3u r\u00f5 \u0111\u01b0\u1ee3c b\u1ea3n ch\u1ea5t c\u1ee7a v\u1ea5n \u0111\u1ec1. R\u1ed3i m\u1ecdi th\u1ee9 s\u1ebd tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n khi b\u1ea1n \u0111\u00e3 hi\u1ec3u. \n\n\nN\u1ed9i dung cung c\u1ea5p\n#\n\n\n\n\nKi\u1ebfn th\u1ee9c v\u1ec1 l\u1eadp tr\u00ecnh ESP8266 d\u00f9ng NONOS-SDK\n\n\nESP8266 v\u1edbi Arduino \n\n\nS\u1eed d\u1ee5ng FreeRTOS v\u1edbi ESP8266 v\u00e0 RTOS-SDK\n\n\nC\u00e1c d\u1ef1 \u00e1n \u1ee9ng d\u1ee5ng th\u1ef1c ti\u1ec5n\n\n\n\n\nB\u1ea3n quy\u1ec1n\n#\n\n\nTo\u00e0n b\u1ed9 t\u00e0i li\u1ec7u \u0111\u01b0\u1ee3c ph\u00e2n ph\u1ed1i theo gi\u1ea5y ph\u00e9p CC BY-SA-NC\n\n\nGhi nh\u00e2\u0323n \u0111o\u0301ng go\u0301p Phi Th\u01b0\u01a1ng ma\u0323i Chia se\u0309 v\u01a1\u0301i \u0110i\u00ea\u0300u ki\u00ea\u0323n Nh\u01b0 nhau (cc by-nc-sa):\nGi\u00e2\u0301y phe\u0301p na\u0300y cho phe\u0301p ng\u01b0\u01a1\u0300i kha\u0301c ph\u00f4\u0301i la\u0323i, tu\u0300y chi\u0309nh, va\u0300 x\u00e2y d\u01b0\u0323ng d\u01b0\u0323a tr\u00ean ta\u0301c ph\u00e2\u0309m cu\u0309a Ba\u0323n v\u01a1\u0301i mu\u0323c \u0111i\u0301ch Phi Th\u01b0\u01a1ng ma\u0323i, v\u01a1\u0301i \u0111i\u00ea\u0300u ki\u00ea\u0323n chu\u0301ng n\u00e2ng cao uy ti\u0301n cu\u0309a Ba\u0323n v\u00e0 cho phe\u0301p c\u00e2\u0301p phe\u0301p \u0111\u00f4\u0301i v\u01a1\u0301i ca\u0301c ta\u0301c ph\u00e2\u0309m sa\u0301ng ta\u0323o m\u01a1\u0301i cu\u0309a ho\u0323 theo ca\u0301c \u0111i\u00ea\u0300u khoa\u0309n gi\u00f4\u0301ng h\u00ea\u0323t.\n\n\nB\u1ea5t k\u1ef3 m\u1ee5c \u0111\u00edch s\u1eed d\u1ee5ng n\u00e0o li\u00ean quan t\u1edbi th\u01b0\u01a1ng m\u1ea1i h\u00f3a, bao g\u1ed3m, s\u1eed d\u1ee5ng v\u1edbi m\u1ee5c \u0111\u00edch gi\u1ea3ng d\u1ea1y, \u0111\u00e0o t\u1ea1o thu ti\u1ec1n h\u1ecdc vi\u00ean b\u1eaft bu\u1ed9c ph\u1ea3i c\u00f3 s\u1ef1 \u0111\u1ed3ng \u00fd b\u1eb1ng v\u0103n b\u1ea3n t\u1eeb t\u00e1c gi\u1ea3.",
            "title": "Trang ch\u1ee7"
        },
        {
            "location": "/#internet-of-things-iot-voi-esp8266",
            "text": "\u0110\u00e2y l\u00e0 Website cung c\u1ea5p ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n cho ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u l\u00e0m quen, l\u1eadp tr\u00ecnh cho ESP8266 theo c\u1ea5u tr\u00fac tu\u1ea7n t\u1ef1. Gi\u00fap ng\u01b0\u1eddi \u0111\u1ecdc c\u00f3 th\u1ec3 t\u1ef1 h\u1ecdc \u0111\u01b0\u1ee3c.  N\u1ed9i dung Website n\u00e0y \u0111i theo h\u01b0\u1edbng c\u00f3 th\u1ec3 kh\u00f4ng ho\u00e0n to\u00e0n d\u1ec5 d\u00e0ng v\u1edbi ng\u01b0\u1eddi \u0111\u1ecdc, nh\u01b0ng xin l\u01b0u \u00fd r\u1eb1ng: Vi\u1ec7c h\u1ecdc t\u1eadp c\u00e1c ki\u1ebfn th\u1ee9c v\u1ec1 k\u1ef9 thu\u1eadt kh\u00f4ng bao gi\u1edd l\u00e0 d\u1ec5 d\u00e0ng. C\u1ea7n ph\u1ea3i c\u00f3 \u0111\u1ea7u t\u01b0 v\u00e0 y\u00eau th\u00edch \u0111\u00fang m\u1ef1c, l\u00fac \u0111\u00f3 chinh ph\u1ee5c nh\u1eefng th\u1eed th\u00e1ch v\u1ec1 tri th\u1ee9c lu\u00f4n lu\u00f4n \u0111\u1ed9ng l\u1ef1c gi\u00fap ta v\u01b0\u1ee3t qua  B\u1edfi v\u00ec l\u00e0 t\u00e0i li\u1ec7u k\u1ef9 thu\u1eadt v\u00e0 c\u00f3 nhi\u1ec1u thu\u1eadt ng\u1eef kh\u00f4ng th\u1ec3/kh\u00f4ng n\u00ean d\u1ecbch ng\u1eef sang ti\u1ebfng Vi\u1ec7t, n\u00ean trong t\u00e0i li\u1ec7u s\u1ebd c\u00f3 nhi\u1ec1u \u0111o\u1ea1n v\u0103n b\u1ea3n s\u1eed d\u1ee5ng l\u1eabn l\u1ed9n c\u1ea3 thu\u1eadt ng\u1eef Ti\u1ebfng Anh v\u00e0 Ti\u1ebfng Vi\u1ec7t.  N\u1ed9i dung v\u00e0 c\u00e1ch th\u1ee9c di\u1ec5n \u0111\u1ea1t v\u00e0 tr\u00ecnh b\u00e0y s\u00e1ch kh\u00f4ng h\u1ec1 d\u1ec5 d\u00e0ng nh\u01b0 ki\u1ec3u Arduino, Lua, hay k\u00e9o th\u1ea3 nh\u01b0 c\u00e1c d\u1ecbch v\u1ee5 s\u1eb5n c\u00f3. N\u00f3 s\u1ebd \u0111i s\u00e2u h\u01a1n v\u00e0o chi ti\u1ebft v\u00e0 gi\u00fap b\u1ea1n hi\u1ec3u r\u00f5 \u0111\u01b0\u1ee3c b\u1ea3n ch\u1ea5t c\u1ee7a v\u1ea5n \u0111\u1ec1. R\u1ed3i m\u1ecdi th\u1ee9 s\u1ebd tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n khi b\u1ea1n \u0111\u00e3 hi\u1ec3u.",
            "title": "Internet Of Things (IoT) v\u1edbi ESP8266"
        },
        {
            "location": "/#noi-dung-cung-cap",
            "text": "Ki\u1ebfn th\u1ee9c v\u1ec1 l\u1eadp tr\u00ecnh ESP8266 d\u00f9ng NONOS-SDK  ESP8266 v\u1edbi Arduino   S\u1eed d\u1ee5ng FreeRTOS v\u1edbi ESP8266 v\u00e0 RTOS-SDK  C\u00e1c d\u1ef1 \u00e1n \u1ee9ng d\u1ee5ng th\u1ef1c ti\u1ec5n",
            "title": "N\u1ed9i dung cung c\u1ea5p"
        },
        {
            "location": "/#ban-quyen",
            "text": "To\u00e0n b\u1ed9 t\u00e0i li\u1ec7u \u0111\u01b0\u1ee3c ph\u00e2n ph\u1ed1i theo gi\u1ea5y ph\u00e9p CC BY-SA-NC  Ghi nh\u00e2\u0323n \u0111o\u0301ng go\u0301p Phi Th\u01b0\u01a1ng ma\u0323i Chia se\u0309 v\u01a1\u0301i \u0110i\u00ea\u0300u ki\u00ea\u0323n Nh\u01b0 nhau (cc by-nc-sa):\nGi\u00e2\u0301y phe\u0301p na\u0300y cho phe\u0301p ng\u01b0\u01a1\u0300i kha\u0301c ph\u00f4\u0301i la\u0323i, tu\u0300y chi\u0309nh, va\u0300 x\u00e2y d\u01b0\u0323ng d\u01b0\u0323a tr\u00ean ta\u0301c ph\u00e2\u0309m cu\u0309a Ba\u0323n v\u01a1\u0301i mu\u0323c \u0111i\u0301ch Phi Th\u01b0\u01a1ng ma\u0323i, v\u01a1\u0301i \u0111i\u00ea\u0300u ki\u00ea\u0323n chu\u0301ng n\u00e2ng cao uy ti\u0301n cu\u0309a Ba\u0323n v\u00e0 cho phe\u0301p c\u00e2\u0301p phe\u0301p \u0111\u00f4\u0301i v\u01a1\u0301i ca\u0301c ta\u0301c ph\u00e2\u0309m sa\u0301ng ta\u0323o m\u01a1\u0301i cu\u0309a ho\u0323 theo ca\u0301c \u0111i\u00ea\u0300u khoa\u0309n gi\u00f4\u0301ng h\u00ea\u0323t.  B\u1ea5t k\u1ef3 m\u1ee5c \u0111\u00edch s\u1eed d\u1ee5ng n\u00e0o li\u00ean quan t\u1edbi th\u01b0\u01a1ng m\u1ea1i h\u00f3a, bao g\u1ed3m, s\u1eed d\u1ee5ng v\u1edbi m\u1ee5c \u0111\u00edch gi\u1ea3ng d\u1ea1y, \u0111\u00e0o t\u1ea1o thu ti\u1ec1n h\u1ecdc vi\u00ean b\u1eaft bu\u1ed9c ph\u1ea3i c\u00f3 s\u1ef1 \u0111\u1ed3ng \u00fd b\u1eb1ng v\u0103n b\u1ea3n t\u1eeb t\u00e1c gi\u1ea3.",
            "title": "B\u1ea3n quy\u1ec1n"
        },
        {
            "location": "/00-introduction/00-introduction/",
            "text": "Ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n\n#\n\n\nCh\u01b0\u01a1ng n\u00e0y s\u1ebd t\u00ecm hi\u1ec3u v\u00e8 c\u00e1c kh\u00e1i ni\u1ec7m li\u00ean quan \u0111\u1ebfn \nIoT\n, l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 b\u1eaft \u0111\u1ea7u l\u1eadp tr\u00ecnh \u1ee9ng d\u1ee5ng \nIoT\n v\u1edbi \nESP8266\n.\nCh\u00fang ta s\u1ebd b\u1eaft \u0111\u1ea7u b\u1eb1ng vi\u1ec7c t\u00ecm hi\u1ec3u t\u1ed5ng quan v\u1ec1 h\u1ec7 th\u1ed1ng \nIoT\n, t\u1ed5ng quan v\u1ec1 d\u00f2ng chip ESP8266, r\u1ed3i \u0111\u1ebfn vi\u1ec7c c\u00e0i \u0111\u1eb7t c\u00f4ng c\u1ee5 ph\u00e1t tri\u1ec3n tr\u00ean m\u00e1y t\u00ednh c\u1ee7a b\u1ea1n. Ti\u1ebfp \u0111\u1ebfn l\u00e0 vi\u1ec7c bi\u00ean d\u1ecbch c\u00e1c d\u1ef1 \u00e1n m\u1eabu, l\u1ef1a ch\u1ecdn tr\u00ecnh th\u01b0 vi\u1ec7n, tr\u00ecnh so\u1ea1n th\u1ea3o s\u1ebd l\u00e0m vi\u1ec7c. K\u1ebft th\u00fac ch\u01b0\u01a1ng n\u00e0y ch\u00fang ta n\u00ean c\u00f3 \u0111\u01b0\u1ee3c c\u00e1i nh\u00ecn t\u1ed5ng qu\u00e1t v\u1ec1 h\u1ec7 th\u1ed1ng IoT, l\u00e0m th\u1ebf n\u00e0o v\u00e0 s\u1eed d\u1ee5ng c\u00f4ng c\u1ee5 g\u00ec \u0111\u1ec3 l\u1eadp tr\u00ecnh \u1ee9ng d\u1ee5ng v\u1edbi ESP8266. Ngo\u00e0i ra ch\u01b0\u01a1ng n\u00e0y c\u00f2n b\u1ed5 sung m\u1ed9t s\u1ed1 ki\u1ebfn th\u1ee9c c\u1ef1c k\u1ef3 c\u01a1 b\u1ea3n v\u1ec1 l\u1eadp tr\u00ecnh \nC\n.\n\n\nV\u1edbi nh\u1eefng ai \u0111\u00e3 t\u1eebng hi\u1ec3u r\u00f5 ESP8266, \u0111\u00e3n t\u1eebng l\u00e0m v\u1ec1 h\u1ec7 th\u1ed1ng IoT, \u0111\u00e3 chuy\u00ean nghi\u1ec7p trong l\u1eadp tr\u00ecnh \nC\n ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 b\u1ecf qua ch\u01b0\u01a1ng n\u00e0y.",
            "title": "Ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n"
        },
        {
            "location": "/00-introduction/00-introduction/#kien-thuc-co-ban",
            "text": "Ch\u01b0\u01a1ng n\u00e0y s\u1ebd t\u00ecm hi\u1ec3u v\u00e8 c\u00e1c kh\u00e1i ni\u1ec7m li\u00ean quan \u0111\u1ebfn  IoT , l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 b\u1eaft \u0111\u1ea7u l\u1eadp tr\u00ecnh \u1ee9ng d\u1ee5ng  IoT  v\u1edbi  ESP8266 .\nCh\u00fang ta s\u1ebd b\u1eaft \u0111\u1ea7u b\u1eb1ng vi\u1ec7c t\u00ecm hi\u1ec3u t\u1ed5ng quan v\u1ec1 h\u1ec7 th\u1ed1ng  IoT , t\u1ed5ng quan v\u1ec1 d\u00f2ng chip ESP8266, r\u1ed3i \u0111\u1ebfn vi\u1ec7c c\u00e0i \u0111\u1eb7t c\u00f4ng c\u1ee5 ph\u00e1t tri\u1ec3n tr\u00ean m\u00e1y t\u00ednh c\u1ee7a b\u1ea1n. Ti\u1ebfp \u0111\u1ebfn l\u00e0 vi\u1ec7c bi\u00ean d\u1ecbch c\u00e1c d\u1ef1 \u00e1n m\u1eabu, l\u1ef1a ch\u1ecdn tr\u00ecnh th\u01b0 vi\u1ec7n, tr\u00ecnh so\u1ea1n th\u1ea3o s\u1ebd l\u00e0m vi\u1ec7c. K\u1ebft th\u00fac ch\u01b0\u01a1ng n\u00e0y ch\u00fang ta n\u00ean c\u00f3 \u0111\u01b0\u1ee3c c\u00e1i nh\u00ecn t\u1ed5ng qu\u00e1t v\u1ec1 h\u1ec7 th\u1ed1ng IoT, l\u00e0m th\u1ebf n\u00e0o v\u00e0 s\u1eed d\u1ee5ng c\u00f4ng c\u1ee5 g\u00ec \u0111\u1ec3 l\u1eadp tr\u00ecnh \u1ee9ng d\u1ee5ng v\u1edbi ESP8266. Ngo\u00e0i ra ch\u01b0\u01a1ng n\u00e0y c\u00f2n b\u1ed5 sung m\u1ed9t s\u1ed1 ki\u1ebfn th\u1ee9c c\u1ef1c k\u1ef3 c\u01a1 b\u1ea3n v\u1ec1 l\u1eadp tr\u00ecnh  C .  V\u1edbi nh\u1eefng ai \u0111\u00e3 t\u1eebng hi\u1ec3u r\u00f5 ESP8266, \u0111\u00e3n t\u1eebng l\u00e0m v\u1ec1 h\u1ec7 th\u1ed1ng IoT, \u0111\u00e3 chuy\u00ean nghi\u1ec7p trong l\u1eadp tr\u00ecnh  C  ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 b\u1ecf qua ch\u01b0\u01a1ng n\u00e0y.",
            "title": "Ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n"
        },
        {
            "location": "/00-introduction/01-about-iot/",
            "text": "Internet Of Things (IoT)\n#\n\n\nInternet of Things (IoT) hay M\u1ea1ng l\u01b0\u1edbi v\u1ea1n v\u1eadt k\u1ebft n\u1ed1i Internet\n#\n\n\nL\u00e0 m\u1ed9t k\u1ecbch b\u1ea3n c\u1ee7a th\u1ebf gi\u1edbi, khi m\u00e0 m\u1ed7i \u0111\u1ed3 v\u1eadt, con ng\u01b0\u1eddi \u0111\u01b0\u1ee3c cung c\u1ea5p m\u1ed9t \u0111\u1ecbnh danh c\u1ee7a ri\u00eang m\u00ecnh, v\u00e0 t\u1ea5t c\u1ea3 c\u00f3 kh\u1ea3 n\u0103ng truy\u1ec1n t\u1ea3i, trao \u0111\u1ed5i th\u00f4ng tin, d\u1eef li\u1ec7u qua m\u1ed9t m\u1ea1ng duy nh\u1ea5t m\u00e0 kh\u00f4ng c\u1ea7n \u0111\u1ebfn s\u1ef1 t\u01b0\u01a1ng t\u00e1c tr\u1ef1c ti\u1ebfp gi\u1eefa ng\u01b0\u1eddi v\u1edbi ng\u01b0\u1eddi, hay ng\u01b0\u1eddi v\u1edbi m\u00e1y t\u00ednh. IoT \u0111\u00e3 ph\u00e1t tri\u1ec3n t\u1eeb s\u1ef1 h\u1ed9i t\u1ee5 c\u1ee7a c\u00f4ng ngh\u1ec7 kh\u00f4ng d\u00e2y, c\u00f4ng ngh\u1ec7 vi c\u01a1 \u0111i\u1ec7n t\u1eed v\u00e0 Internet[1]. N\u00f3i \u0111\u01a1n gi\u1ea3n l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c thi\u1ebft b\u1ecb c\u00f3 kh\u1ea3 n\u0103ng k\u1ebft n\u1ed1i v\u1edbi nhau, v\u1edbi Internet v\u00e0 v\u1edbi th\u1ebf gi\u1edbi b\u00ean ngo\u00e0i \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t c\u00f4ng vi\u1ec7c n\u00e0o \u0111\u00f3.\n\n\nhttp://vi.wikipedia.org/wiki/M\u1ea1ng_l\u01b0\u1edbi_v\u1ea1n_v\u1eadt_k\u1ebft_n\u1ed1i_Internet",
            "title": "Internet Of Things (IoT)"
        },
        {
            "location": "/00-introduction/01-about-iot/#internet-of-things-iot",
            "text": "",
            "title": "Internet Of Things (IoT)"
        },
        {
            "location": "/00-introduction/01-about-iot/#internet-of-things-iot-hay-mang-luoi-van-vat-ket-noi-internet",
            "text": "L\u00e0 m\u1ed9t k\u1ecbch b\u1ea3n c\u1ee7a th\u1ebf gi\u1edbi, khi m\u00e0 m\u1ed7i \u0111\u1ed3 v\u1eadt, con ng\u01b0\u1eddi \u0111\u01b0\u1ee3c cung c\u1ea5p m\u1ed9t \u0111\u1ecbnh danh c\u1ee7a ri\u00eang m\u00ecnh, v\u00e0 t\u1ea5t c\u1ea3 c\u00f3 kh\u1ea3 n\u0103ng truy\u1ec1n t\u1ea3i, trao \u0111\u1ed5i th\u00f4ng tin, d\u1eef li\u1ec7u qua m\u1ed9t m\u1ea1ng duy nh\u1ea5t m\u00e0 kh\u00f4ng c\u1ea7n \u0111\u1ebfn s\u1ef1 t\u01b0\u01a1ng t\u00e1c tr\u1ef1c ti\u1ebfp gi\u1eefa ng\u01b0\u1eddi v\u1edbi ng\u01b0\u1eddi, hay ng\u01b0\u1eddi v\u1edbi m\u00e1y t\u00ednh. IoT \u0111\u00e3 ph\u00e1t tri\u1ec3n t\u1eeb s\u1ef1 h\u1ed9i t\u1ee5 c\u1ee7a c\u00f4ng ngh\u1ec7 kh\u00f4ng d\u00e2y, c\u00f4ng ngh\u1ec7 vi c\u01a1 \u0111i\u1ec7n t\u1eed v\u00e0 Internet[1]. N\u00f3i \u0111\u01a1n gi\u1ea3n l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c thi\u1ebft b\u1ecb c\u00f3 kh\u1ea3 n\u0103ng k\u1ebft n\u1ed1i v\u1edbi nhau, v\u1edbi Internet v\u00e0 v\u1edbi th\u1ebf gi\u1edbi b\u00ean ngo\u00e0i \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t c\u00f4ng vi\u1ec7c n\u00e0o \u0111\u00f3.  http://vi.wikipedia.org/wiki/M\u1ea1ng_l\u01b0\u1edbi_v\u1ea1n_v\u1eadt_k\u1ebft_n\u1ed1i_Internet",
            "title": "Internet of Things (IoT) hay M\u1ea1ng l\u01b0\u1edbi v\u1ea1n v\u1eadt k\u1ebft n\u1ed1i Internet"
        },
        {
            "location": "/00-introduction/02-about-esp8266/",
            "text": "ESP8266\n#\n\n\nESP8266 l\u00e0 d\u00f2ng chip t\u00edch h\u1ee3p Wi-Fi 2.4Ghz c\u00f3 th\u1ec3 l\u1eadp tr\u00ecnh \u0111\u01b0\u1ee3c, r\u1ebb ti\u1ec1n \u0111\u01b0\u1ee3c s\u1ea3n xu\u1ea5t b\u1edfi m\u1ed9t c\u00f4ng ty b\u00e1n d\u1eabn Trung Qu\u1ed1c: Espressif Systems.\n\n\n\u0110\u01b0\u1ee3c ph\u00e1t h\u00e0nh \u0111\u1ea7u ti\u00ean v\u00e0o th\u00e1ng 8 n\u0103m 2014, \u0111\u00f3ng g\u00f3i \u0111\u01b0a ra th\u1ecb tr\u01b0\u1eddng d\u1ea1ng M\u00f4 dun ESP-01, \u0111\u01b0\u1ee3c s\u1ea3n xu\u1ea5t b\u1edfi b\u00ean th\u1ee9 3: AI-Thinker. C\u00f3 kh\u1ea3 n\u0103ng k\u1ebft n\u1ed1i Internet qua m\u1ea1ng Wi-Fi m\u1ed9t c\u00e1ch nhanh ch\u00f3ng v\u00e0 s\u1eed d\u1ee5ng r\u1ea5t \u00edt linh ki\u1ec7n \u0111i k\u00e8m. V\u1edbi gi\u00e1 c\u1ea3 c\u00f3 th\u1ec3 n\u00f3i l\u00e0 r\u1ea5t r\u1ebb so v\u1edbi t\u00ednh n\u0103ng v\u00e0 kh\u1ea3 n\u0103ng ESP8266 c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c.\n\n\nESP8266 c\u00f3 m\u1ed9t c\u1ed9ng \u0111\u1ed3ng c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n tr\u00ean th\u1ebf gi\u1edbi r\u1ea5t l\u1edbn, cung c\u1ea5p nhi\u1ec1u Module l\u1eadp tr\u00ecnh m\u00e3 m\u1edf gi\u00fap nhi\u1ec1u ng\u01b0\u1eddi c\u00f3 th\u1ec3 ti\u1ebfp c\u1eadn v\u00e0 x\u00e2y d\u1ef1ng \u1ee9ng d\u1ee5ng r\u1ea5t nhanh.\n\n\nHi\u1ec7n nay t\u1ea5t c\u1ea3 c\u00e1c d\u00f2ng chip ESP8266 tr\u00ean th\u1ecb tr\u01b0\u1eddng \u0111\u1ec1u mang nh\u00e3n ESP8266EX, l\u00e0 phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p c\u1ee7a ESP8266\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n & S\u01a1 \u0111\u1ed3 kh\u1ed1i\n#\n\n\n.S\u01a1 \u0111\u1ed3 ch\u00e2n & s\u01a1 \u0111\u1ed3 kh\u1ed1i ESP8266EX\n\n\n\nTh\u00f4ng s\u1ed1 ph\u1ea7n c\u1ee9ng\n#\n\n\n\n\n32-bit RISC CPU : Tensilica Xtensa LX106 running at 80 MHz\n\n\nH\u1ed5 tr\u1ee3 Flash ngo\u00e0i t\u1eeb 512KiB \u0111\u1ebfn 4MiB\n\n\n64KBytes RAM th\u1ef1c thi l\u1ec7nh\n\n\n96KBytes RAM d\u1eef li\u1ec7u\n\n\n64KBytes boot ROM\n\n\nChu\u1ea9n wifi EEE 802.11 b/g/n, Wi-Fi 2.4 GHz\n\n T\u00edch h\u1ee3p TR switch, balun, LNA, khu\u1ebfch \u0111\u1ea1i c\u00f4ng su\u1ea5t v\u00e0 matching network\n\n H\u1ed5 tr\u1ee3 WEP, WPA/WPA2, Open network\n\n\nT\u00edch h\u1ee3p giao th\u1ee9c TCP/IP\n\n\nH\u1ed5 tr\u1ee3 nhi\u1ec1u lo\u1ea1i anten\n\n\n16 ch\u00e2n GPIO\n\n\nH\u1ed5 tr\u1ee3 SDIO 2.0, UART, SPI, I\u00b2C, PWM,I\u00b2S v\u1edbi DMA\n\n\n1 ADC 10-bit\n\n\nD\u1ea3i nhi\u1ec7t \u0111\u1ed9 ho\u1ea1t \u0111\u1ed9ng r\u1ed9ng : -40C ~ 125C\n\n\n\n\nSDK h\u1ed7 tr\u1ee3 ch\u00ednh th\u1ee9c t\u1eeb h\u00e3ng\n#\n\n\nT\u1ea1i th\u1eddi \u0111i\u1ec3m xu\u1ea5t b\u1ea3n s\u00e1ch n\u00e0y, Espressif \u0111\u00e3 h\u1ed7 tr\u1ee3 2 n\u1ec1n t\u1ea3ng SDK (Software Development Kit - G\u00f3i ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m) \u0111\u1ed9c l\u1eadp, l\u00e0: \nNONOS SDK\n v\u00e0 \nRTOS SDK\n. C\u1ea3 2 \u0111\u1ec1u c\u00f3 nh\u1eefng \u01b0u \u0111i\u1ec3m ri\u00eang ph\u00f9 h\u1ee3p v\u1edbi t\u1eebng \u1ee9ng d\u1ee5ng nh\u1ea5t \u0111\u1ecbnh, v\u00e0 s\u1eed d\u1ee5ng chung nhi\u1ec1u c\u00e1c h\u00e0m \u0111i\u1ec1u khi\u1ec3n ph\u1ea7n c\u1ee9ng. Tuy nhi\u00ean \nNONOS SDK\n \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 c\u1eadp nh\u1eadt s\u1edbm nh\u1ea5t, nhi\u1ec1u t\u00ednh n\u0103ng nh\u1ea5t v\u00e0 \u0111\u01a1n gi\u1ea3n, d\u1ec5 s\u1eed d\u1ee5ng h\u01a1n. Ch\u00ednh v\u00ec v\u1eady \nNONOS SDK\n s\u1ebd l\u00e0 SDK \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ch\u00ednh th\u1ee9c \u1edf t\u1ea5t c\u1ea3 c\u00e1c h\u01b0\u1edbng d\u1eabn c\u1ee7a cu\u1ed1n s\u00e1ch n\u00e0y.\n\n\nESP8266 NONOS SDK\n#\n\n\nHi\u1ec7n nay, \nNONOS SDK\n phi\u00ean b\u1ea3n t\u1eeb \n2.0.0\n tr\u1edf l\u00ean \u0111\u00e3 \u1ed5n \u0111\u1ecbnh v\u00e0 cung c\u1ea5p g\u1ea7n nh\u01b0 l\u00e0 \u0111\u1ea7y \u0111\u1ee7 t\u1ea5t c\u1ea3 c\u00e1c t\u00ednh n\u0103ng m\u00e0 ESP8266 c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n:\n\n\n\n\nC\u00e1c API cho Timer, System, Wifi, \u0111\u1ecdc ghi SPI Flash, Sleep v\u00e0 c\u00e1c Module ph\u1ea7n c\u1ee9ng: GPIO, SPI, I\u00b2C, PWM, I\u00b2S v\u1edbi DMA.\n\n\nSmartconfig\n: H\u1ed7 tr\u1ee3 c\u1ea5u h\u00ecnh th\u00f4ng s\u1ed1 Wi-Fi cho ESP8266 nhanh ch\u00f3ng.\n\n\nSniffer\n API: B\u1eaft c\u00e1c g\u00f3i tin trong m\u1ea1ng kh\u00f4ng d\u00e2y 2.4Ghz.\n\n\nSNTP\n API: \u0110\u1ed3ng b\u1ed9 th\u1eddi gian v\u1edbi M\u00e1y ch\u1ee7 th\u1eddi gian.\n\n\nWPA2 Enterprise\n API: Cung c\u1ea5p vi\u1ec7c qu\u1ea3n l\u00fd k\u1ebft n\u1ed1i Wi-Fi b\u1eb1ng t\u00e0i kho\u1ea3n s\u1eed d\u1ee5ng c\u00e1c m\u00e1y ch\u1ee7 RADIUS.\n\n\nTCP/UDP\n API: Cho k\u1ebft n\u1ed1i internet, v\u00e0 h\u1ed7 tr\u1ee3 c\u00e1c Module d\u1ef1a tr\u00ean, nh\u01b0: HTTP, MQTT, CoAP.\n\n\nmDNS\n API: Gi\u00fap t\u00ecm ra \nIP\n c\u1ee7a thi\u1ebft b\u1ecb trong m\u1ea1ng n\u1ed9i b\u1ed9 b\u1eb1ng t\u00ean (hostname).\n\n\nMESH\n API: Li\u00ean k\u1ebft c\u00e1c module ESP8266 v\u1edbi c\u1ea5u tr\u00fac m\u1ea1ng MESH\n\n\nFOTA\n API: Firmware Over The Air - c\u1eadp nh\u1eadt firmware t\u1eeb xa cho thi\u1ebft b\u1ecb .\n\n\nESP-Now\n API: S\u1eed d\u1ee5ng c\u00e1c g\u00f3i tin Wireless 2.4GHz trao \u0111\u1ed5i tr\u1ef1c ti\u1ebfp v\u1edbi ESP8266 kh\u00e1c m\u00e0 kh\u00f4ng c\u1ea7n k\u1ebft n\u1ed1i t\u1edbi Access Point.\n\n\nSimple Pair\n API: Thi\u1ebft l\u1eadp k\u1ebft n\u1ed1i b\u1ea3o m\u1eadt gi\u1eefa 2 thi\u1ebft b\u1ecb t\u1ef1 \u0111\u1ed9ng.\n\n\n\n\nESP8266 RTOS SDK\n#\n\n\nRTOS SDK\n s\u1eed d\u1ee5ng \nFreeRTOS\n l\u00e0m n\u1ec1n t\u1ea3ng, \u0111\u1ed3ng th\u1eddi h\u1ea7u h\u1ebft c\u00e1c API c\u1ee7a \nNON OS\n SDK \u0111\u1ec1u c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng v\u1edbi \nRTOS SDK\n.\n\n\nESP8285\n#\n\n\nESP8285 l\u00e0 m\u1ed9t phi\u00ean b\u1ea3n kh\u00e1c sau n\u00e0y c\u1ee7a ESP8266EX, gi\u1ed1ng ho\u00e0n to\u00e0n ESP8266EX ngo\u1ea1i tr\u1eeb vi\u1ec7c thay v\u00ec d\u00f9ng SPI FLASH b\u00ean ngo\u00e0i th\u00ec ESP8285 t\u00edch h\u1ee3p 1MiB Flash b\u00ean trong gi\u00fap gi\u1ea3m di\u1ec7n t\u00edch ph\u1ea7n c\u1ee9ng v\u00e0 \u0111\u01a1n gi\u1ea3n h\u00f3a qu\u00e1 tr\u00ecnh s\u1ea3n xu\u1ea5t.\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\nTh\u00f4ng s\u1ed1 ph\u1ea7n c\u1ee9ng\n#",
            "title": "ESP8266 & ESP8285"
        },
        {
            "location": "/00-introduction/02-about-esp8266/#esp8266",
            "text": "ESP8266 l\u00e0 d\u00f2ng chip t\u00edch h\u1ee3p Wi-Fi 2.4Ghz c\u00f3 th\u1ec3 l\u1eadp tr\u00ecnh \u0111\u01b0\u1ee3c, r\u1ebb ti\u1ec1n \u0111\u01b0\u1ee3c s\u1ea3n xu\u1ea5t b\u1edfi m\u1ed9t c\u00f4ng ty b\u00e1n d\u1eabn Trung Qu\u1ed1c: Espressif Systems.  \u0110\u01b0\u1ee3c ph\u00e1t h\u00e0nh \u0111\u1ea7u ti\u00ean v\u00e0o th\u00e1ng 8 n\u0103m 2014, \u0111\u00f3ng g\u00f3i \u0111\u01b0a ra th\u1ecb tr\u01b0\u1eddng d\u1ea1ng M\u00f4 dun ESP-01, \u0111\u01b0\u1ee3c s\u1ea3n xu\u1ea5t b\u1edfi b\u00ean th\u1ee9 3: AI-Thinker. C\u00f3 kh\u1ea3 n\u0103ng k\u1ebft n\u1ed1i Internet qua m\u1ea1ng Wi-Fi m\u1ed9t c\u00e1ch nhanh ch\u00f3ng v\u00e0 s\u1eed d\u1ee5ng r\u1ea5t \u00edt linh ki\u1ec7n \u0111i k\u00e8m. V\u1edbi gi\u00e1 c\u1ea3 c\u00f3 th\u1ec3 n\u00f3i l\u00e0 r\u1ea5t r\u1ebb so v\u1edbi t\u00ednh n\u0103ng v\u00e0 kh\u1ea3 n\u0103ng ESP8266 c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c.  ESP8266 c\u00f3 m\u1ed9t c\u1ed9ng \u0111\u1ed3ng c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n tr\u00ean th\u1ebf gi\u1edbi r\u1ea5t l\u1edbn, cung c\u1ea5p nhi\u1ec1u Module l\u1eadp tr\u00ecnh m\u00e3 m\u1edf gi\u00fap nhi\u1ec1u ng\u01b0\u1eddi c\u00f3 th\u1ec3 ti\u1ebfp c\u1eadn v\u00e0 x\u00e2y d\u1ef1ng \u1ee9ng d\u1ee5ng r\u1ea5t nhanh.  Hi\u1ec7n nay t\u1ea5t c\u1ea3 c\u00e1c d\u00f2ng chip ESP8266 tr\u00ean th\u1ecb tr\u01b0\u1eddng \u0111\u1ec1u mang nh\u00e3n ESP8266EX, l\u00e0 phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p c\u1ee7a ESP8266",
            "title": "ESP8266"
        },
        {
            "location": "/00-introduction/02-about-esp8266/#so-o-chan-so-o-khoi",
            "text": ".S\u01a1 \u0111\u1ed3 ch\u00e2n & s\u01a1 \u0111\u1ed3 kh\u1ed1i ESP8266EX",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n &amp; S\u01a1 \u0111\u1ed3 kh\u1ed1i"
        },
        {
            "location": "/00-introduction/02-about-esp8266/#thong-so-phan-cung",
            "text": "32-bit RISC CPU : Tensilica Xtensa LX106 running at 80 MHz  H\u1ed5 tr\u1ee3 Flash ngo\u00e0i t\u1eeb 512KiB \u0111\u1ebfn 4MiB  64KBytes RAM th\u1ef1c thi l\u1ec7nh  96KBytes RAM d\u1eef li\u1ec7u  64KBytes boot ROM  Chu\u1ea9n wifi EEE 802.11 b/g/n, Wi-Fi 2.4 GHz  T\u00edch h\u1ee3p TR switch, balun, LNA, khu\u1ebfch \u0111\u1ea1i c\u00f4ng su\u1ea5t v\u00e0 matching network  H\u1ed5 tr\u1ee3 WEP, WPA/WPA2, Open network  T\u00edch h\u1ee3p giao th\u1ee9c TCP/IP  H\u1ed5 tr\u1ee3 nhi\u1ec1u lo\u1ea1i anten  16 ch\u00e2n GPIO  H\u1ed5 tr\u1ee3 SDIO 2.0, UART, SPI, I\u00b2C, PWM,I\u00b2S v\u1edbi DMA  1 ADC 10-bit  D\u1ea3i nhi\u1ec7t \u0111\u1ed9 ho\u1ea1t \u0111\u1ed9ng r\u1ed9ng : -40C ~ 125C",
            "title": "Th\u00f4ng s\u1ed1 ph\u1ea7n c\u1ee9ng"
        },
        {
            "location": "/00-introduction/02-about-esp8266/#sdk-ho-tro-chinh-thuc-tu-hang",
            "text": "T\u1ea1i th\u1eddi \u0111i\u1ec3m xu\u1ea5t b\u1ea3n s\u00e1ch n\u00e0y, Espressif \u0111\u00e3 h\u1ed7 tr\u1ee3 2 n\u1ec1n t\u1ea3ng SDK (Software Development Kit - G\u00f3i ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m) \u0111\u1ed9c l\u1eadp, l\u00e0:  NONOS SDK  v\u00e0  RTOS SDK . C\u1ea3 2 \u0111\u1ec1u c\u00f3 nh\u1eefng \u01b0u \u0111i\u1ec3m ri\u00eang ph\u00f9 h\u1ee3p v\u1edbi t\u1eebng \u1ee9ng d\u1ee5ng nh\u1ea5t \u0111\u1ecbnh, v\u00e0 s\u1eed d\u1ee5ng chung nhi\u1ec1u c\u00e1c h\u00e0m \u0111i\u1ec1u khi\u1ec3n ph\u1ea7n c\u1ee9ng. Tuy nhi\u00ean  NONOS SDK  \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 c\u1eadp nh\u1eadt s\u1edbm nh\u1ea5t, nhi\u1ec1u t\u00ednh n\u0103ng nh\u1ea5t v\u00e0 \u0111\u01a1n gi\u1ea3n, d\u1ec5 s\u1eed d\u1ee5ng h\u01a1n. Ch\u00ednh v\u00ec v\u1eady  NONOS SDK  s\u1ebd l\u00e0 SDK \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ch\u00ednh th\u1ee9c \u1edf t\u1ea5t c\u1ea3 c\u00e1c h\u01b0\u1edbng d\u1eabn c\u1ee7a cu\u1ed1n s\u00e1ch n\u00e0y.",
            "title": "SDK h\u1ed7 tr\u1ee3 ch\u00ednh th\u1ee9c t\u1eeb h\u00e3ng"
        },
        {
            "location": "/00-introduction/02-about-esp8266/#esp8266-nonos-sdk",
            "text": "Hi\u1ec7n nay,  NONOS SDK  phi\u00ean b\u1ea3n t\u1eeb  2.0.0  tr\u1edf l\u00ean \u0111\u00e3 \u1ed5n \u0111\u1ecbnh v\u00e0 cung c\u1ea5p g\u1ea7n nh\u01b0 l\u00e0 \u0111\u1ea7y \u0111\u1ee7 t\u1ea5t c\u1ea3 c\u00e1c t\u00ednh n\u0103ng m\u00e0 ESP8266 c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n:   C\u00e1c API cho Timer, System, Wifi, \u0111\u1ecdc ghi SPI Flash, Sleep v\u00e0 c\u00e1c Module ph\u1ea7n c\u1ee9ng: GPIO, SPI, I\u00b2C, PWM, I\u00b2S v\u1edbi DMA.  Smartconfig : H\u1ed7 tr\u1ee3 c\u1ea5u h\u00ecnh th\u00f4ng s\u1ed1 Wi-Fi cho ESP8266 nhanh ch\u00f3ng.  Sniffer  API: B\u1eaft c\u00e1c g\u00f3i tin trong m\u1ea1ng kh\u00f4ng d\u00e2y 2.4Ghz.  SNTP  API: \u0110\u1ed3ng b\u1ed9 th\u1eddi gian v\u1edbi M\u00e1y ch\u1ee7 th\u1eddi gian.  WPA2 Enterprise  API: Cung c\u1ea5p vi\u1ec7c qu\u1ea3n l\u00fd k\u1ebft n\u1ed1i Wi-Fi b\u1eb1ng t\u00e0i kho\u1ea3n s\u1eed d\u1ee5ng c\u00e1c m\u00e1y ch\u1ee7 RADIUS.  TCP/UDP  API: Cho k\u1ebft n\u1ed1i internet, v\u00e0 h\u1ed7 tr\u1ee3 c\u00e1c Module d\u1ef1a tr\u00ean, nh\u01b0: HTTP, MQTT, CoAP.  mDNS  API: Gi\u00fap t\u00ecm ra  IP  c\u1ee7a thi\u1ebft b\u1ecb trong m\u1ea1ng n\u1ed9i b\u1ed9 b\u1eb1ng t\u00ean (hostname).  MESH  API: Li\u00ean k\u1ebft c\u00e1c module ESP8266 v\u1edbi c\u1ea5u tr\u00fac m\u1ea1ng MESH  FOTA  API: Firmware Over The Air - c\u1eadp nh\u1eadt firmware t\u1eeb xa cho thi\u1ebft b\u1ecb .  ESP-Now  API: S\u1eed d\u1ee5ng c\u00e1c g\u00f3i tin Wireless 2.4GHz trao \u0111\u1ed5i tr\u1ef1c ti\u1ebfp v\u1edbi ESP8266 kh\u00e1c m\u00e0 kh\u00f4ng c\u1ea7n k\u1ebft n\u1ed1i t\u1edbi Access Point.  Simple Pair  API: Thi\u1ebft l\u1eadp k\u1ebft n\u1ed1i b\u1ea3o m\u1eadt gi\u1eefa 2 thi\u1ebft b\u1ecb t\u1ef1 \u0111\u1ed9ng.",
            "title": "ESP8266 NONOS SDK"
        },
        {
            "location": "/00-introduction/02-about-esp8266/#esp8266-rtos-sdk",
            "text": "RTOS SDK  s\u1eed d\u1ee5ng  FreeRTOS  l\u00e0m n\u1ec1n t\u1ea3ng, \u0111\u1ed3ng th\u1eddi h\u1ea7u h\u1ebft c\u00e1c API c\u1ee7a  NON OS  SDK \u0111\u1ec1u c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng v\u1edbi  RTOS SDK .",
            "title": "ESP8266 RTOS SDK"
        },
        {
            "location": "/00-introduction/02-about-esp8266/#esp8285",
            "text": "ESP8285 l\u00e0 m\u1ed9t phi\u00ean b\u1ea3n kh\u00e1c sau n\u00e0y c\u1ee7a ESP8266EX, gi\u1ed1ng ho\u00e0n to\u00e0n ESP8266EX ngo\u1ea1i tr\u1eeb vi\u1ec7c thay v\u00ec d\u00f9ng SPI FLASH b\u00ean ngo\u00e0i th\u00ec ESP8285 t\u00edch h\u1ee3p 1MiB Flash b\u00ean trong gi\u00fap gi\u1ea3m di\u1ec7n t\u00edch ph\u1ea7n c\u1ee9ng v\u00e0 \u0111\u01a1n gi\u1ea3n h\u00f3a qu\u00e1 tr\u00ecnh s\u1ea3n xu\u1ea5t.",
            "title": "ESP8285"
        },
        {
            "location": "/00-introduction/02-about-esp8266/#so-o-chan",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/02-about-esp8266/#thong-so-phan-cung_1",
            "text": "",
            "title": "Th\u00f4ng s\u1ed1 ph\u1ea7n c\u1ee9ng"
        },
        {
            "location": "/00-introduction/03-esp-module/",
            "text": "Module v\u00e0 Board m\u1ea1ch ph\u00e1t tri\u1ec3n\n#\n\n\nESP8266 c\u1ea7n \u00edt nh\u1ea5t th\u00eam 7 linh ki\u1ec7n n\u1eefa m\u1edbi c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng, trong \u0111\u00f3 ph\u1ea7n kh\u00f3 nh\u1ea5t l\u00e0 Antena. \u0110\u00f2i h\u1ecfi ph\u1ea3i \u0111\u01b0\u1ee3c s\u1ea3n xu\u1ea5t, ki\u1ec3m tra v\u1edbi c\u00e1c thi\u1ebft b\u1ecb hi\u1ec7n \u0111\u1ea1i. Do \u0111\u00f3, tr\u00ean th\u1ecb tr\u01b0\u1eddng xu\u1ea5t hi\u1ec7n nhi\u1ec1u Module v\u00e0 Board m\u1ea1ch ph\u00e1t tri\u1ec3n \u0111\u1ea3m \u0111\u01b0\u01a1ng h\u1ebft \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng \u0111\u01a1n gi\u1ea3n nh\u1ea5t trong vi\u1ec7c ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng. M\u1ed9t s\u1ed1 Module v\u00e0 Board ph\u00e1t tri\u1ec3n ph\u1ed5 bi\u1ebfn:\n\n\nB\u1ea3ng so s\u00e1nh c\u00e1c th\u00f4ng s\u1ed1\n#\n\n\n\n\n\n\n\n\nPhi\u00ean b\u1ea3n\n\n\nS\u1ed1 ch\u00e2n\n\n\npitch\n\n\nform factor\n\n\nLEDs\n\n\nAntenna\n\n\nAnt.Socket\n\n\nShielded\n\n\nd\u00e0i mm\n\n\n\n\n\n\n\n\n\n\nESP-01\n\n\n8\n\n\n.1\u201c\n\n\n2\u00d74 DIL\n\n\nYes\n\n\nEtched-on PCB\n\n\nNo\n\n\nNo\n\n\n14.3 x 24.8\n\n\n\n\n\n\nESP-02\n\n\n8\n\n\n.1\u201d\n\n\n2\u00d74 notch\n\n\nNo?\n\n\nNone\n\n\nYes\n\n\nNo\n\n\n14.2 x 14.2\n\n\n\n\n\n\nESP-03\n\n\n14\n\n\n2mm\n\n\n2\u00d77 notch\n\n\nNo\n\n\nCeramic\n\n\nNo\n\n\nNo\n\n\n17.3 x 12.1\n\n\n\n\n\n\nESP-04\n\n\n14\n\n\n2mm\n\n\n2\u00d74 notch\n\n\nNo?\n\n\nNone\n\n\nNo\n\n\nNo\n\n\n14.7 x 12.1\n\n\n\n\n\n\nESP-05\n\n\n5\n\n\n.1\u201c\n\n\n1\u00d75 SIL\n\n\nNo\n\n\nNone\n\n\nYes\n\n\nNo\n\n\n14.2 x 14.2\n\n\n\n\n\n\nESP-06\n\n\n12+GND\n\n\nmisc\n\n\n4\u00d73 dice\n\n\nNo\n\n\nNone\n\n\nNo\n\n\nYes\n\n\n16.3 x 13.1\n\n\n\n\n\n\nESP-07\n\n\n16\n\n\n2mm\n\n\n2\u00d78 pinhole\n\n\nYes\n\n\nCeramic\n\n\nYes\n\n\nYes\n\n\n20.0 x 16.0\n\n\n\n\n\n\nESP-08\n\n\n14\n\n\n2mm\n\n\n2\u00d77 notch\n\n\nNo\n\n\nNone\n\n\nNo\n\n\nYes\n\n\n17.0 x 16.0\n\n\n\n\n\n\nESP-08 New\n\n\n16\n\n\n2mm\n\n\n2\u00d78 notch\n\n\nNo\n\n\nNone\n\n\nNo\n\n\nYes\n\n\n18.0 x 16.0\n\n\n\n\n\n\nESP-09\n\n\n12+GND\n\n\nmisc\n\n\n4\u00d73 dice\n\n\nNo\n\n\nNone\n\n\nNo\n\n\nNo\n\n\n10.0 x 10.0\n\n\n\n\n\n\nESP-10\n\n\n5\n\n\n2mmm?\n\n\n1\u00d75 notch\n\n\nNo\n\n\nNone\n\n\nNo\n\n\nNo\n\n\n14.2 x 10.0\n\n\n\n\n\n\nESP-11\n\n\n8\n\n\n1.27mm\n\n\n1\u00d78 pinhole\n\n\nNo?\n\n\nCeramic\n\n\nNo\n\n\nNo\n\n\n17.3 x 12.1\n\n\n\n\n\n\nESP-12\n\n\n16\n\n\n2mm\n\n\n2\u00d78 notch\n\n\nYes\n\n\nEtched-on PCB\n\n\nNo\n\n\nYes\n\n\n24.0 x 16.0\n\n\n\n\n\n\nESP-12-E\n\n\n22\n\n\n2mm\n\n\n2\u00d78 notch\n\n\nYes\n\n\nEtched-on PCB\n\n\nNo\n\n\nYes\n\n\n24.0 x 16.0\n\n\n\n\n\n\nESP-13\n\n\n18\n\n\n1.5mm\n\n\n2\u00d79\n\n\n?\n\n\nEtched-on PCB\n\n\nNo\n\n\nYes\n\n\n? x ?\n\n\n\n\n\n\nESP-14\n\n\n22\n\n\n2mm\n\n\n2\u00d78 + 6\n\n\n1\n\n\nEtched-on PCB\n\n\nNo\n\n\nYes\n\n\n24.3 x 16.2\n\n\n\n\n\n\nWROOM-02\n\n\n18\n\n\n1.5mm\n\n\n2\u00d79\n\n\nNo\n\n\nEtched on PCB\n\n\nNo\n\n\nYes\n\n\n20.0 x 18.0\n\n\n\n\n\n\nWT8266-S1\n\n\n18\n\n\n1.5mm\n\n\n3\u00d76\n\n\n1\n\n\nEtched on PCB\n\n\nNo\n\n\nYes\n\n\n15.0 x 18.6\n\n\n\n\n\n\n\n\nM\u1ed9t s\u1ed1 module ESP8266 tr\u00ean th\u1ecb tr\u01b0\u1eddng\n#\n\n\nESP-WROOM-02\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nESP-WROOM-02 l\u00e0 m\u1ed9t module MCU Wifi 32-bit ti\u1ebft ki\u1ec7m n\u0103ng l\u01b0\u1ee3ng d\u1ef1a tr\u00ean chip ESP8266.\n\n\nH\u1ed5 tr\u1ee3 c\u00e1c chu\u1ea9n m\u1ea1ng kh\u00f4ng d\u00e2y 802.11 b/g/n\n\n\nT\u00edch h\u1ee3p s\u1eb3n giao th\u1ee9c TCP/IP, 10-bit ADC, TR switch, balun, LNA, v\u00e0 c\u00e1c chu\u1ea9n giao ti\u1ebfp HSPI/UART/PWM/I2C/I2S.\n\n\nH\u1ed5 tr\u1ee3 Wi-Fi Alliance, SRRC, FCC, CE, TELEC, IC & KCC Certified, RoHS, Halogen Free, REACH & CFSI Compliant, HTOL, ESD-HM, MSL, \u03bcHAST, HTSL\n\n\nH\u1ed5 tr\u1ee3 Cloud Server Development\n\n\nCustom firmware development qua SDK\n\n\nC\u1ea5u h\u00ecnh ng\u01b0\u1eddi d\u00f9ng qua AT Instruction Set, Cloud Server v\u00e0 \u1ee9ng d\u1ee5ng Afdroid/iOS\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2.54mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-01\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nM\u1ea1ch nh\u1ecf, g\u1ecdn (24.75mm x 14.5mm)\n\n\n\u0110i\u1ec7n \u00e1p l\u00e0m vi\u1ec7c 3.3v\n\n\nT\u00edch h\u1ee3p s\u1eb3n anten PCB trace tr\u00ean module \n\n\nC\u00f3 hai led b\u00e1o hi\u1ec7u : led ngu\u1ed3n, led TXD\n\n\nC\u00f3 c\u00e1c ch\u1ebf \u0111\u1ed9: AP, STA, AT + STA\n\n\nL\u1ec7nh AT r\u1ea5t \u0111\u01a1n gi\u1ea3n, d\u1ec5 d\u00e0ng s\u1eed d\u1ee5ng\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2.54mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-02\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nS\u1eed d\u1ee5ng anten ngo\u00e0i - U.FL\n\n\nWireless network mode : station, softAP, softAP + station\n\n\nT\u1ea7n s\u1ed1 wifi ho\u1ea1t \u0111\u1ed9ng 2.4GHz, v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nD\u1ec5 d\u00e0ng ph\u00e1t tri\u1ec3n c\u00e1c d\u1ef1 \u00e1n v\u1edbi l\u1ec7nh AT\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2.54mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-03\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nT\u00edch h\u1ee3p s\u1eb3n anten ceramic tr\u00ean module v\u00e0 1 pin\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, 2.4GHz\n\n\nWireless network mode : station, softAP, softAP + station\n\n\nH\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nD\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-04\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nWireless network mode : station, softAP, softAP + station\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz,v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nD\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-05\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nS\u1eed d\u1ee5ng anten ngo\u00e0i - U.FL\n\n\nWireless network mode : station, softAP, softAP + station\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nD\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2.54mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-06\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nWireless network mode : station, softAP, softAP + station\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nH\u1ed5 tr\u1ee3 TCP/UDP\n\n\nD\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-07\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nT\u00edch h\u1ee3p s\u1eb3n anten ceramic v\u00e0 anten ngo\u00e0i U.FL\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nH\u1ed5 tr\u1ee3 TCP/UDP\n\n\nD\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-08\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nH\u1ed5 tr\u1ee3 TCP/UDP\n\n\nC\u00f3 c\u00e1c ch\u1ebf \u0111\u1ed9: AP, STA, AT + STA\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-09\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nK\u00edch th\u01b0\u1edbc m\u1ea1ch nh\u1ecf (10mmx10mm)\n\n\nH\u1ed5 tr\u1ee3 LWIP\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-10\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nH\u1ed5 tr\u1ee3 TCP/UDP\n\n\nC\u00f3 c\u00e1c ch\u1ebf \u0111\u1ed9: AP, STA, AT + STA\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-11\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nT\u00edch h\u1ee3p s\u1eb3n anten ceramic tr\u00ean module\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nD\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 1.27mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-12\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nT\u00edch h\u1ee3p anten PCB trace tr\u00ean module\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-12E\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nT\u00edch h\u1ee3p anten PCB trace tr\u00ean module\n\n\n4MB flash\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-13\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nT\u00edch h\u1ee3p anten PCB trace tr\u00ean module\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 1.5mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nESP-14\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nT\u00edch h\u1ee3p anten PCB trace tr\u00ean module\n\n\nT\u00edch h\u1ee3p th\u00eam STM8S003F3P6, STM8S c\u00f3 th\u1ec3 \u0111i\u1ec1u khi\u1ec3n ESP8266 b\u1eb1ng l\u1ec7nh AT\n\n\nTi\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2\n\n\nKho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#\n\n\n\n\n\n\nWT8266-S1\n#\n\n\n\n\nT\u00ednh n\u0103ng\n#\n\n\n\n\nS\u1eed d\u1ee5ng ngu\u1ed3n 3.3v\n\n\nNhi\u1ec7t \u0111\u1ed9 ho\u1ea1t \u0111\u1ed9ng  : -20\u00b0C - 70\u00b0C\n\n\nChip Tensilica L106\n\n\nRAM 36KB\n\n\nFlash 16Mbit\n\n\n\n\n\n\nH\u1ec7 th\u1ed1ng \n\n\nH\u1ed5 tr\u1ee3 c\u00e1c chu\u1ea9n wifi 802.11 b/g/n \n\n\nT\u1ea7n s\u1ed1 ho\u1ea1t \u0111\u1ed9ng h\u1ed5 tr\u1ee3 t\u1eeb 80MHz \u0111\u1ebfn 160 MHz, h\u1ed5 tr\u1ee3 RTOS\n\n\nWIFI 2.4 GHz, h\u1ed5 tr\u1ee3 WPA/WPA2 \n\n\nT\u00edch h\u1ee3p 10-bit ADC \u0111\u1ed9 ch\u00ednh x\u00e1c cao\n\n\nH\u1ed5 tr\u1ee3 TCP/IP stack\n\n\nT\u00edch h\u1ee3p TR Switch/balun/LNA/b\u1ed9 khu\u1ebfch \u0111\u1ea1i c\u00f4ng su\u1ea5t v\u00e0 matching network\n\n\nT\u00edch h\u1ee3p anten PCB trace tr\u00ean module\n\n\nH\u1ed5 tr\u1ee3 n\u00e2ng c\u1ea5p AT t\u1eeb xa v\u00e0 cloud OTA\n\n\n\n\n\n\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n\n#",
            "title": "Module & Board ph\u00e1t tri\u1ec3n"
        },
        {
            "location": "/00-introduction/03-esp-module/#module-va-board-mach-phat-trien",
            "text": "ESP8266 c\u1ea7n \u00edt nh\u1ea5t th\u00eam 7 linh ki\u1ec7n n\u1eefa m\u1edbi c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng, trong \u0111\u00f3 ph\u1ea7n kh\u00f3 nh\u1ea5t l\u00e0 Antena. \u0110\u00f2i h\u1ecfi ph\u1ea3i \u0111\u01b0\u1ee3c s\u1ea3n xu\u1ea5t, ki\u1ec3m tra v\u1edbi c\u00e1c thi\u1ebft b\u1ecb hi\u1ec7n \u0111\u1ea1i. Do \u0111\u00f3, tr\u00ean th\u1ecb tr\u01b0\u1eddng xu\u1ea5t hi\u1ec7n nhi\u1ec1u Module v\u00e0 Board m\u1ea1ch ph\u00e1t tri\u1ec3n \u0111\u1ea3m \u0111\u01b0\u01a1ng h\u1ebft \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng \u0111\u01a1n gi\u1ea3n nh\u1ea5t trong vi\u1ec7c ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng. M\u1ed9t s\u1ed1 Module v\u00e0 Board ph\u00e1t tri\u1ec3n ph\u1ed5 bi\u1ebfn:",
            "title": "Module v\u00e0 Board m\u1ea1ch ph\u00e1t tri\u1ec3n"
        },
        {
            "location": "/00-introduction/03-esp-module/#bang-so-sanh-cac-thong-so",
            "text": "Phi\u00ean b\u1ea3n  S\u1ed1 ch\u00e2n  pitch  form factor  LEDs  Antenna  Ant.Socket  Shielded  d\u00e0i mm      ESP-01  8  .1\u201c  2\u00d74 DIL  Yes  Etched-on PCB  No  No  14.3 x 24.8    ESP-02  8  .1\u201d  2\u00d74 notch  No?  None  Yes  No  14.2 x 14.2    ESP-03  14  2mm  2\u00d77 notch  No  Ceramic  No  No  17.3 x 12.1    ESP-04  14  2mm  2\u00d74 notch  No?  None  No  No  14.7 x 12.1    ESP-05  5  .1\u201c  1\u00d75 SIL  No  None  Yes  No  14.2 x 14.2    ESP-06  12+GND  misc  4\u00d73 dice  No  None  No  Yes  16.3 x 13.1    ESP-07  16  2mm  2\u00d78 pinhole  Yes  Ceramic  Yes  Yes  20.0 x 16.0    ESP-08  14  2mm  2\u00d77 notch  No  None  No  Yes  17.0 x 16.0    ESP-08 New  16  2mm  2\u00d78 notch  No  None  No  Yes  18.0 x 16.0    ESP-09  12+GND  misc  4\u00d73 dice  No  None  No  No  10.0 x 10.0    ESP-10  5  2mmm?  1\u00d75 notch  No  None  No  No  14.2 x 10.0    ESP-11  8  1.27mm  1\u00d78 pinhole  No?  Ceramic  No  No  17.3 x 12.1    ESP-12  16  2mm  2\u00d78 notch  Yes  Etched-on PCB  No  Yes  24.0 x 16.0    ESP-12-E  22  2mm  2\u00d78 notch  Yes  Etched-on PCB  No  Yes  24.0 x 16.0    ESP-13  18  1.5mm  2\u00d79  ?  Etched-on PCB  No  Yes  ? x ?    ESP-14  22  2mm  2\u00d78 + 6  1  Etched-on PCB  No  Yes  24.3 x 16.2    WROOM-02  18  1.5mm  2\u00d79  No  Etched on PCB  No  Yes  20.0 x 18.0    WT8266-S1  18  1.5mm  3\u00d76  1  Etched on PCB  No  Yes  15.0 x 18.6",
            "title": "B\u1ea3ng so s\u00e1nh c\u00e1c th\u00f4ng s\u1ed1"
        },
        {
            "location": "/00-introduction/03-esp-module/#mot-so-module-esp8266-tren-thi-truong",
            "text": "",
            "title": "M\u1ed9t s\u1ed1 module ESP8266 tr\u00ean th\u1ecb tr\u01b0\u1eddng"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-wroom-02",
            "text": "",
            "title": "ESP-WROOM-02"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang",
            "text": "ESP-WROOM-02 l\u00e0 m\u1ed9t module MCU Wifi 32-bit ti\u1ebft ki\u1ec7m n\u0103ng l\u01b0\u1ee3ng d\u1ef1a tr\u00ean chip ESP8266.  H\u1ed5 tr\u1ee3 c\u00e1c chu\u1ea9n m\u1ea1ng kh\u00f4ng d\u00e2y 802.11 b/g/n  T\u00edch h\u1ee3p s\u1eb3n giao th\u1ee9c TCP/IP, 10-bit ADC, TR switch, balun, LNA, v\u00e0 c\u00e1c chu\u1ea9n giao ti\u1ebfp HSPI/UART/PWM/I2C/I2S.  H\u1ed5 tr\u1ee3 Wi-Fi Alliance, SRRC, FCC, CE, TELEC, IC & KCC Certified, RoHS, Halogen Free, REACH & CFSI Compliant, HTOL, ESD-HM, MSL, \u03bcHAST, HTSL  H\u1ed5 tr\u1ee3 Cloud Server Development  Custom firmware development qua SDK  C\u1ea5u h\u00ecnh ng\u01b0\u1eddi d\u00f9ng qua AT Instruction Set, Cloud Server v\u00e0 \u1ee9ng d\u1ee5ng Afdroid/iOS  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2.54mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-01",
            "text": "",
            "title": "ESP-01"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_1",
            "text": "M\u1ea1ch nh\u1ecf, g\u1ecdn (24.75mm x 14.5mm)  \u0110i\u1ec7n \u00e1p l\u00e0m vi\u1ec7c 3.3v  T\u00edch h\u1ee3p s\u1eb3n anten PCB trace tr\u00ean module   C\u00f3 hai led b\u00e1o hi\u1ec7u : led ngu\u1ed3n, led TXD  C\u00f3 c\u00e1c ch\u1ebf \u0111\u1ed9: AP, STA, AT + STA  L\u1ec7nh AT r\u1ea5t \u0111\u01a1n gi\u1ea3n, d\u1ec5 d\u00e0ng s\u1eed d\u1ee5ng  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2.54mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_1",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-02",
            "text": "",
            "title": "ESP-02"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_2",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  S\u1eed d\u1ee5ng anten ngo\u00e0i - U.FL  Wireless network mode : station, softAP, softAP + station  T\u1ea7n s\u1ed1 wifi ho\u1ea1t \u0111\u1ed9ng 2.4GHz, v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  D\u1ec5 d\u00e0ng ph\u00e1t tri\u1ec3n c\u00e1c d\u1ef1 \u00e1n v\u1edbi l\u1ec7nh AT  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2.54mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_2",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-03",
            "text": "",
            "title": "ESP-03"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_3",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  T\u00edch h\u1ee3p s\u1eb3n anten ceramic tr\u00ean module v\u00e0 1 pin  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, 2.4GHz  Wireless network mode : station, softAP, softAP + station  H\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  D\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_3",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-04",
            "text": "",
            "title": "ESP-04"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_4",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  Wireless network mode : station, softAP, softAP + station  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz,v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  D\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_4",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-05",
            "text": "",
            "title": "ESP-05"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_5",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  S\u1eed d\u1ee5ng anten ngo\u00e0i - U.FL  Wireless network mode : station, softAP, softAP + station  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  D\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2.54mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_5",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-06",
            "text": "",
            "title": "ESP-06"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_6",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  Wireless network mode : station, softAP, softAP + station  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  H\u1ed5 tr\u1ee3 TCP/UDP  D\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_6",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-07",
            "text": "",
            "title": "ESP-07"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_7",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  T\u00edch h\u1ee3p s\u1eb3n anten ceramic v\u00e0 anten ngo\u00e0i U.FL  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  H\u1ed5 tr\u1ee3 TCP/UDP  D\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_7",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-08",
            "text": "",
            "title": "ESP-08"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_8",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  H\u1ed5 tr\u1ee3 TCP/UDP  C\u00f3 c\u00e1c ch\u1ebf \u0111\u1ed9: AP, STA, AT + STA  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_8",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-09",
            "text": "",
            "title": "ESP-09"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_9",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  K\u00edch th\u01b0\u1edbc m\u1ea1ch nh\u1ecf (10mmx10mm)  H\u1ed5 tr\u1ee3 LWIP  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_9",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-10",
            "text": "",
            "title": "ESP-10"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_10",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  H\u1ed5 tr\u1ee3 TCP/UDP  C\u00f3 c\u00e1c ch\u1ebf \u0111\u1ed9: AP, STA, AT + STA  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_10",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-11",
            "text": "",
            "title": "ESP-11"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_11",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  T\u00edch h\u1ee3p s\u1eb3n anten ceramic tr\u00ean module  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  D\u1ec5 d\u00e1ng s\u1eed d\u1ee5ng v\u1edbi l\u1ec7nh AT  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 1.27mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_11",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-12",
            "text": "",
            "title": "ESP-12"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_12",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  T\u00edch h\u1ee3p anten PCB trace tr\u00ean module  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_12",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-12e",
            "text": "",
            "title": "ESP-12E"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_13",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  T\u00edch h\u1ee3p anten PCB trace tr\u00ean module  4MB flash  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_13",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-13",
            "text": "",
            "title": "ESP-13"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_14",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  T\u00edch h\u1ee3p anten PCB trace tr\u00ean module  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 1.5mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_14",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#esp-14",
            "text": "",
            "title": "ESP-14"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_15",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  T\u00edch h\u1ee3p anten PCB trace tr\u00ean module  T\u00edch h\u1ee3p th\u00eam STM8S003F3P6, STM8S c\u00f3 th\u1ec3 \u0111i\u1ec1u khi\u1ec3n ESP8266 b\u1eb1ng l\u1ec7nh AT  Ti\u00eau chu\u1ea9n wifi : 802.11b/g/n, v\u1edbi t\u1ea7n s\u1ed1 2.4GHz v\u00e0 h\u1ed5 tr\u1ee3 b\u1ea3o m\u1eadt WPA/WPA2  Kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c ch\u00e2n 2mm",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_15",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/03-esp-module/#wt8266-s1",
            "text": "",
            "title": "WT8266-S1"
        },
        {
            "location": "/00-introduction/03-esp-module/#tinh-nang_16",
            "text": "S\u1eed d\u1ee5ng ngu\u1ed3n 3.3v  Nhi\u1ec7t \u0111\u1ed9 ho\u1ea1t \u0111\u1ed9ng  : -20\u00b0C - 70\u00b0C  Chip Tensilica L106  RAM 36KB  Flash 16Mbit    H\u1ec7 th\u1ed1ng   H\u1ed5 tr\u1ee3 c\u00e1c chu\u1ea9n wifi 802.11 b/g/n   T\u1ea7n s\u1ed1 ho\u1ea1t \u0111\u1ed9ng h\u1ed5 tr\u1ee3 t\u1eeb 80MHz \u0111\u1ebfn 160 MHz, h\u1ed5 tr\u1ee3 RTOS  WIFI 2.4 GHz, h\u1ed5 tr\u1ee3 WPA/WPA2   T\u00edch h\u1ee3p 10-bit ADC \u0111\u1ed9 ch\u00ednh x\u00e1c cao  H\u1ed5 tr\u1ee3 TCP/IP stack  T\u00edch h\u1ee3p TR Switch/balun/LNA/b\u1ed9 khu\u1ebfch \u0111\u1ea1i c\u00f4ng su\u1ea5t v\u00e0 matching network  T\u00edch h\u1ee3p anten PCB trace tr\u00ean module  H\u1ed5 tr\u1ee3 n\u00e2ng c\u1ea5p AT t\u1eeb xa v\u00e0 cloud OTA",
            "title": "T\u00ednh n\u0103ng"
        },
        {
            "location": "/00-introduction/03-esp-module/#so-o-chan_16",
            "text": "",
            "title": "S\u01a1 \u0111\u1ed3 ch\u00e2n"
        },
        {
            "location": "/00-introduction/04-prepare/",
            "text": "Ph\u1ea7n c\u1ee9ng v\u00e0 ki\u1ebfn th\u1ee9c c\u1ea7n chu\u1ea9n b\u1ecb\n#\n\n\nGi\u1ed1ng nh\u01b0 t\u1ea5t c\u1ea3 c\u00e1c Vi \u0111i\u1ec1u khi\u1ec3n kh\u00e1c, vi\u1ec7c l\u1eadp tr\u00ecnh cho ESP8266 c\u1ea7n nh\u1eefng ki\u1ebfn th\u1ee9c v\u1ec1 l\u1eadp tr\u00ecnh \nC\n c\u0169ng nh\u01b0 ph\u1ea7n c\u1ee9ng \u0111\u1ec3 th\u1ef1c h\u00e0nh. Trong s\u00e1ch n\u00e0y ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng m\u1ea1ch ph\u00e1t tri\u1ec3n NodeMCU \u0111\u1ec3 th\u1eed nghi\u1ec7m t\u1ea5t c\u1ea3 c\u00e1c v\u00ed d\u1ee5 m\u1eabu.\n\n\nC\u00e0i \u0111\u1eb7t Git\n#\n\n\nM\u1ea1ch ph\u00e1t tri\u1ec3n NodeMCU\n#\n\n\nM\u1ea1ch n\u00e0y c\u00f3 b\u00e1n r\u1ed9ng r\u00e3i tr\u00ean th\u1ecb tr\u01b0\u1eddng, ti\u1ec7n l\u1ee3i khi ph\u00e1t tri\u1ec3n, v\u00e0 \u0111\u01b0\u1ee3c cung c\u1ea5p \u0111\u1ea7y \u0111\u1ee7 m\u1ea1ch nguy\u00ean l\u00fd, m\u1edf v\u1ec1 ph\u1ea7n c\u1ee9ng. Chip USB-TTL h\u1ed7 tr\u1ee3 DTR v\u00e0 RTS cho ph\u00e9p ph\u1ea7n m\u1ec1m n\u1ea1p \nesptool.py\n c\u00f3 th\u1ec3 \u0111i\u1ec1u khi\u1ec3n ESP8266 v\u00e0o ch\u1ebf \u0111\u1ed9 n\u1ea1p lu\u00f4n m\u00e0 kh\u00f4ng c\u1ea7n thao t\u00e1c ph\u1ea7n c\u1ee9ng n\u00e0o.\n\n\nCh\u00fa \u00fd\n#\n\n\nT\u1edbi th\u1eddi \u0111i\u1ec3m hi\u1ec7n nay, c\u00f4ng c\u1ee5 n\u1ea1p cho ESP8266 c\u00f3 th\u1ec3 \u0111\u1ea1t t\u1ed1c \u0111\u1ed9 921600 baud. Tuy nhi\u00ean, c\u00e1c m\u1ea1ch NodeMCU hi\u1ec7n tr\u00ean th\u1ecb tr\u01b0\u1eddng s\u1eed d\u1ee5ng nhi\u1ec1u lo\u1ea1i chip USB-TTL kh\u00e1c nhau, n\u00ean c\u1ea7n ki\u1ec3m tra t\u1ed1c \u0111\u1ed9 h\u1ed7 tr\u1ee3 tr\u01b0\u1edbc khi mua. N\u1ebfu t\u1ed1c \u0111\u1ed9 th\u1ea5p, th\u00ec vi\u1ec7c n\u1ea1p \u1ee9ng d\u1ee5ng cho ESP8266 kh\u00e1 l\u00e2u cho nh\u1eefng \u1ee9ng d\u1ee5ng l\u1edbn.\n\n\nhttps://github.com/nodemcu/nodemcu-devkit-v1.0\n\n\nS\u01a1 \u0111\u1ed3 ch\u00e2n & s\u01a1 \u0111\u1ed3 kh\u1ed1i ESP8266EX\n\n\n\nM\u1ea1ch nguy\u00ean l\u00fd\n#\n\n\n// S\u01a1 \u0111\u1ed3 nguy\u00ean l\u00fd -> SVG\n//image::nodemcu_devkit_1.0.svg[NodeMCU schematic]\n\n\nNh\u1eefng l\u1ef1a ch\u1ecdn kh\u00e1c\n#\n\n\n// C\u00e1c m\u1ea1ch ph\u00e1t tri\u1ec3n kh\u00e1c..\n\n\nC\u00e0i \u0111\u1eb7t tr\u00ecnh so\u1ea1n th\u1ea3o & c\u00e0i \u0111\u1eb7t ban \u0111\u1ea7u\n#\n\n\nSublime Text\n#\n\n\n\n\nT\u1ea3i \nSublime\n\n\nC\u00e0i \nPackage Control\n\n\nC\u00e0i \nMarkdown Editing\n\n\nC\u00e0i \nMarkdown Preview\n \u0111\u1ec3 review l\u1ea1i tr\u01b0\u1edbc khi commit. \u0110\u1ec3 xem \u1ea5n Ctrl + Shift + P, g\u00f5 Preview in browser ho\u1eb7c t\u1ea1o ph\u00edm t\u1eaft.\n\n\nTra c\u1ee9u c\u00e1ch vi\u1ebft Markdown v\u1edbi \nMarkdown Cheatsheet\n\n\nLuy\u1ec7n th\u00eam v\u00e0i tutorial Markdown \u0111\u1ec3 th\u1ef1c h\u00e0nh \nTut md\n\n\n\n\nEclipse\n#\n\n\nNotepad++\n#\n\n\nNg\u00f4n ng\u1eef l\u1eadp tr\u00ecnh C\n#\n\n\nT\u1ea5t nhi\u00ean vi\u1ec7c ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng cho nh\u1eefng Vi \u0111i\u1ec1u khi\u1ec3n \u00edt t\u00e0i nguy\u00ean, dung l\u01b0\u1ee3ng b\u1ed9 nh\u1edb c\u00f2n v\u00e0i ch\u1ee5c KiB th\u00ec hi\u1ebfm c\u00f3 s\u1ef1 l\u1ef1a ch\u1ecdn n\u00e0o kh\u00e1c ngo\u00e0i ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh \nC/C++\n. Nh\u1eefng ng\u00f4n ng\u1eef kh\u00e1c nh\u01b0: \nLua\n, \nPython\n c\u0169ng \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n cho ESP8266, nh\u01b0ng \u0111\u1ec3 ho\u00e0n th\u00e0nh c\u00f4ng vi\u1ec7c c\u00e0ng d\u1ec5 d\u00e0ng, th\u00ec \u0111\u00f2i h\u1ecfi t\u00e0i nguy\u00ean c\u00e0ng nhi\u1ec1u. V\u00e0 s\u1ef1 \u1ed5n \u0111\u1ecbnh c\u1ee7a \u1ee9ng d\u1ee5ng s\u1ebd ph\u1ee5 thu\u1ed9c r\u1ea5t nhi\u1ec1u v\u00e0o vi\u1ec7c d\u01b0 gi\u1ea3 t\u00e0i nguy\u00ean. Chip ESP8266 kh\u00f4ng \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 \u0111\u1ee7 t\u00e0i nguy\u00ean ch\u1ea1y \u1ed5n \u0111\u1ecbnh cho c\u00e1c tr\u00ecnh th\u00f4ng d\u1ecbch (Interpreter) n\u00e0y.\n\n\nMakefile\n#\n\n\n\u0110\u1ec3 bi\u00ean d\u1ecbch \u0111\u01b0\u1ee3c ch\u00fang ta c\u1ea7n ho\u00e0n th\u00e0nh vi\u1ec7c c\u00e0i \u0111\u1eb7t tr\u00ecnh bi\u00ean d\u1ecbch b\u00ean tr\u00ean, v\u00e0 t\u00ecm hi\u1ec3u m\u1ed9t ch\u00fat v\u1ec1 k\u1ecbch b\u1ea3n \nMakefile\n. C\u00e1c ki\u1ebfn th\u1ee9c n\u00e0y th\u00f4ng th\u01b0\u1eddng c\u00e1c b\u1ea1n \u0111\u1ec1u ph\u1ea3i bi\u1ebft khi h\u1ecdc v\u1ec1 ng\u00f4n ng\u1eef \nC\n. N\u1ed9i dung ph\u1ea7n n\u00e0y ch\u1ec9 n\u00f3i ng\u1eafn g\u1ecdn, x\u00fac t\u00edch nh\u1eefng g\u00ec c\u1ea7n thi\u1ebft nh\u1ea5t.\n\n\nMakefile\n l\u00e0 c\u00f4ng c\u1ee5 k\u1ecbch b\u1ea3n h\u00f3a qu\u00e1 tr\u00ecnh bi\u00ean d\u1ecbch th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong h\u1ec7 \u0111i\u1ec1u h\u00e0nh Unix, Linux, t\u1ea5t nhi\u00ean c\u00f3 c\u1ea3 tr\u00ean Windows nh\u01b0ng kh\u00f4ng ph\u1ed5 bi\u1ebfn. N\u00f3 \u0111\u01a1n gi\u1ea3n qu\u00e1 h\u00f3a tr\u00ecnh th\u1ef1c hi\u1ec7n bi\u00ean d\u1ecbch b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng c\u00e1c module c\u00f3 s\u1eb5n trong h\u1ec7 \u0111i\u1ec1u h\u00e0nh.\n\n\nVi\u1ec7c s\u1eed d\u1ee5ng Makefile trong c\u00e1c d\u1ef1 \u00e1n \nC\n \u00edt th\u01b0\u1eddng xuy\u00ean v\u00e0 th\u01b0\u1eddng \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf s\u1eb5n b\u1edfi ng\u01b0\u1eddi t\u1ea1o n\u00ean d\u1ef1 \u00e1n \u0111\u00f3. Do v\u1eady, b\u1ea1n ch\u1ec9 c\u1ea7n hi\u1ec3u s\u01a1 v\u1ec1 \nMakefile\n \u0111\u1ec3 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng s\u1eeda ch\u1eefa theo \u00fd m\u00ecnh, n\u1ebfu kh\u00f4ng mu\u1ed1n chuy\u00ean s\u00e2u. M\u1ed9t s\u1ed1 t\u1eeb kh\u00f3a google \u0111\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm hi\u1ec3u v\u1ec1 \nMakefile\n: \u201cMakefile basics\u201d, \u201cMakefile tutorial\u201d.\n\n\n\u0110\u1ec3 bi\u00ean d\u1ecbch, b\u1ea1n g\u00f5 \nmake\n t\u1eeb c\u1eeda s\u1ed5 terminal, ch\u01b0\u01a1ng tr\u00ecnh \nmake\n s\u1ebd t\u00ecm v\u00e0 \u0111\u1ecdc file m\u1eb7c \u0111\u1ecbnh c\u00f3 t\u00ean \nMakefile\n \u1edf th\u01b0 m\u1ee5c hi\u1ec7n h\u00e0nh v\u00e0 th\u1ef1c thi n\u00f3.",
            "title": "C\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n"
        },
        {
            "location": "/00-introduction/04-prepare/#phan-cung-va-kien-thuc-can-chuan-bi",
            "text": "Gi\u1ed1ng nh\u01b0 t\u1ea5t c\u1ea3 c\u00e1c Vi \u0111i\u1ec1u khi\u1ec3n kh\u00e1c, vi\u1ec7c l\u1eadp tr\u00ecnh cho ESP8266 c\u1ea7n nh\u1eefng ki\u1ebfn th\u1ee9c v\u1ec1 l\u1eadp tr\u00ecnh  C  c\u0169ng nh\u01b0 ph\u1ea7n c\u1ee9ng \u0111\u1ec3 th\u1ef1c h\u00e0nh. Trong s\u00e1ch n\u00e0y ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng m\u1ea1ch ph\u00e1t tri\u1ec3n NodeMCU \u0111\u1ec3 th\u1eed nghi\u1ec7m t\u1ea5t c\u1ea3 c\u00e1c v\u00ed d\u1ee5 m\u1eabu.",
            "title": "Ph\u1ea7n c\u1ee9ng v\u00e0 ki\u1ebfn th\u1ee9c c\u1ea7n chu\u1ea9n b\u1ecb"
        },
        {
            "location": "/00-introduction/04-prepare/#cai-at-git",
            "text": "",
            "title": "C\u00e0i \u0111\u1eb7t Git"
        },
        {
            "location": "/00-introduction/04-prepare/#mach-phat-trien-nodemcu",
            "text": "M\u1ea1ch n\u00e0y c\u00f3 b\u00e1n r\u1ed9ng r\u00e3i tr\u00ean th\u1ecb tr\u01b0\u1eddng, ti\u1ec7n l\u1ee3i khi ph\u00e1t tri\u1ec3n, v\u00e0 \u0111\u01b0\u1ee3c cung c\u1ea5p \u0111\u1ea7y \u0111\u1ee7 m\u1ea1ch nguy\u00ean l\u00fd, m\u1edf v\u1ec1 ph\u1ea7n c\u1ee9ng. Chip USB-TTL h\u1ed7 tr\u1ee3 DTR v\u00e0 RTS cho ph\u00e9p ph\u1ea7n m\u1ec1m n\u1ea1p  esptool.py  c\u00f3 th\u1ec3 \u0111i\u1ec1u khi\u1ec3n ESP8266 v\u00e0o ch\u1ebf \u0111\u1ed9 n\u1ea1p lu\u00f4n m\u00e0 kh\u00f4ng c\u1ea7n thao t\u00e1c ph\u1ea7n c\u1ee9ng n\u00e0o.",
            "title": "M\u1ea1ch ph\u00e1t tri\u1ec3n NodeMCU"
        },
        {
            "location": "/00-introduction/04-prepare/#chu-y",
            "text": "T\u1edbi th\u1eddi \u0111i\u1ec3m hi\u1ec7n nay, c\u00f4ng c\u1ee5 n\u1ea1p cho ESP8266 c\u00f3 th\u1ec3 \u0111\u1ea1t t\u1ed1c \u0111\u1ed9 921600 baud. Tuy nhi\u00ean, c\u00e1c m\u1ea1ch NodeMCU hi\u1ec7n tr\u00ean th\u1ecb tr\u01b0\u1eddng s\u1eed d\u1ee5ng nhi\u1ec1u lo\u1ea1i chip USB-TTL kh\u00e1c nhau, n\u00ean c\u1ea7n ki\u1ec3m tra t\u1ed1c \u0111\u1ed9 h\u1ed7 tr\u1ee3 tr\u01b0\u1edbc khi mua. N\u1ebfu t\u1ed1c \u0111\u1ed9 th\u1ea5p, th\u00ec vi\u1ec7c n\u1ea1p \u1ee9ng d\u1ee5ng cho ESP8266 kh\u00e1 l\u00e2u cho nh\u1eefng \u1ee9ng d\u1ee5ng l\u1edbn.  https://github.com/nodemcu/nodemcu-devkit-v1.0  S\u01a1 \u0111\u1ed3 ch\u00e2n & s\u01a1 \u0111\u1ed3 kh\u1ed1i ESP8266EX",
            "title": "Ch\u00fa \u00fd"
        },
        {
            "location": "/00-introduction/04-prepare/#mach-nguyen-ly",
            "text": "// S\u01a1 \u0111\u1ed3 nguy\u00ean l\u00fd -> SVG\n//image::nodemcu_devkit_1.0.svg[NodeMCU schematic]",
            "title": "M\u1ea1ch nguy\u00ean l\u00fd"
        },
        {
            "location": "/00-introduction/04-prepare/#nhung-lua-chon-khac",
            "text": "// C\u00e1c m\u1ea1ch ph\u00e1t tri\u1ec3n kh\u00e1c..",
            "title": "Nh\u1eefng l\u1ef1a ch\u1ecdn kh\u00e1c"
        },
        {
            "location": "/00-introduction/04-prepare/#cai-at-trinh-soan-thao-cai-at-ban-au",
            "text": "",
            "title": "C\u00e0i \u0111\u1eb7t tr\u00ecnh so\u1ea1n th\u1ea3o &amp; c\u00e0i \u0111\u1eb7t ban \u0111\u1ea7u"
        },
        {
            "location": "/00-introduction/04-prepare/#sublime-text",
            "text": "T\u1ea3i  Sublime  C\u00e0i  Package Control  C\u00e0i  Markdown Editing  C\u00e0i  Markdown Preview  \u0111\u1ec3 review l\u1ea1i tr\u01b0\u1edbc khi commit. \u0110\u1ec3 xem \u1ea5n Ctrl + Shift + P, g\u00f5 Preview in browser ho\u1eb7c t\u1ea1o ph\u00edm t\u1eaft.  Tra c\u1ee9u c\u00e1ch vi\u1ebft Markdown v\u1edbi  Markdown Cheatsheet  Luy\u1ec7n th\u00eam v\u00e0i tutorial Markdown \u0111\u1ec3 th\u1ef1c h\u00e0nh  Tut md",
            "title": "Sublime Text"
        },
        {
            "location": "/00-introduction/04-prepare/#eclipse",
            "text": "",
            "title": "Eclipse"
        },
        {
            "location": "/00-introduction/04-prepare/#notepad",
            "text": "",
            "title": "Notepad++"
        },
        {
            "location": "/00-introduction/04-prepare/#ngon-ngu-lap-trinh-c",
            "text": "T\u1ea5t nhi\u00ean vi\u1ec7c ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng cho nh\u1eefng Vi \u0111i\u1ec1u khi\u1ec3n \u00edt t\u00e0i nguy\u00ean, dung l\u01b0\u1ee3ng b\u1ed9 nh\u1edb c\u00f2n v\u00e0i ch\u1ee5c KiB th\u00ec hi\u1ebfm c\u00f3 s\u1ef1 l\u1ef1a ch\u1ecdn n\u00e0o kh\u00e1c ngo\u00e0i ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh  C/C++ . Nh\u1eefng ng\u00f4n ng\u1eef kh\u00e1c nh\u01b0:  Lua ,  Python  c\u0169ng \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n cho ESP8266, nh\u01b0ng \u0111\u1ec3 ho\u00e0n th\u00e0nh c\u00f4ng vi\u1ec7c c\u00e0ng d\u1ec5 d\u00e0ng, th\u00ec \u0111\u00f2i h\u1ecfi t\u00e0i nguy\u00ean c\u00e0ng nhi\u1ec1u. V\u00e0 s\u1ef1 \u1ed5n \u0111\u1ecbnh c\u1ee7a \u1ee9ng d\u1ee5ng s\u1ebd ph\u1ee5 thu\u1ed9c r\u1ea5t nhi\u1ec1u v\u00e0o vi\u1ec7c d\u01b0 gi\u1ea3 t\u00e0i nguy\u00ean. Chip ESP8266 kh\u00f4ng \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 \u0111\u1ee7 t\u00e0i nguy\u00ean ch\u1ea1y \u1ed5n \u0111\u1ecbnh cho c\u00e1c tr\u00ecnh th\u00f4ng d\u1ecbch (Interpreter) n\u00e0y.",
            "title": "Ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh C"
        },
        {
            "location": "/00-introduction/04-prepare/#makefile",
            "text": "\u0110\u1ec3 bi\u00ean d\u1ecbch \u0111\u01b0\u1ee3c ch\u00fang ta c\u1ea7n ho\u00e0n th\u00e0nh vi\u1ec7c c\u00e0i \u0111\u1eb7t tr\u00ecnh bi\u00ean d\u1ecbch b\u00ean tr\u00ean, v\u00e0 t\u00ecm hi\u1ec3u m\u1ed9t ch\u00fat v\u1ec1 k\u1ecbch b\u1ea3n  Makefile . C\u00e1c ki\u1ebfn th\u1ee9c n\u00e0y th\u00f4ng th\u01b0\u1eddng c\u00e1c b\u1ea1n \u0111\u1ec1u ph\u1ea3i bi\u1ebft khi h\u1ecdc v\u1ec1 ng\u00f4n ng\u1eef  C . N\u1ed9i dung ph\u1ea7n n\u00e0y ch\u1ec9 n\u00f3i ng\u1eafn g\u1ecdn, x\u00fac t\u00edch nh\u1eefng g\u00ec c\u1ea7n thi\u1ebft nh\u1ea5t.  Makefile  l\u00e0 c\u00f4ng c\u1ee5 k\u1ecbch b\u1ea3n h\u00f3a qu\u00e1 tr\u00ecnh bi\u00ean d\u1ecbch th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong h\u1ec7 \u0111i\u1ec1u h\u00e0nh Unix, Linux, t\u1ea5t nhi\u00ean c\u00f3 c\u1ea3 tr\u00ean Windows nh\u01b0ng kh\u00f4ng ph\u1ed5 bi\u1ebfn. N\u00f3 \u0111\u01a1n gi\u1ea3n qu\u00e1 h\u00f3a tr\u00ecnh th\u1ef1c hi\u1ec7n bi\u00ean d\u1ecbch b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng c\u00e1c module c\u00f3 s\u1eb5n trong h\u1ec7 \u0111i\u1ec1u h\u00e0nh.  Vi\u1ec7c s\u1eed d\u1ee5ng Makefile trong c\u00e1c d\u1ef1 \u00e1n  C  \u00edt th\u01b0\u1eddng xuy\u00ean v\u00e0 th\u01b0\u1eddng \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf s\u1eb5n b\u1edfi ng\u01b0\u1eddi t\u1ea1o n\u00ean d\u1ef1 \u00e1n \u0111\u00f3. Do v\u1eady, b\u1ea1n ch\u1ec9 c\u1ea7n hi\u1ec3u s\u01a1 v\u1ec1  Makefile  \u0111\u1ec3 c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng s\u1eeda ch\u1eefa theo \u00fd m\u00ecnh, n\u1ebfu kh\u00f4ng mu\u1ed1n chuy\u00ean s\u00e2u. M\u1ed9t s\u1ed1 t\u1eeb kh\u00f3a google \u0111\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm hi\u1ec3u v\u1ec1  Makefile : \u201cMakefile basics\u201d, \u201cMakefile tutorial\u201d.  \u0110\u1ec3 bi\u00ean d\u1ecbch, b\u1ea1n g\u00f5  make  t\u1eeb c\u1eeda s\u1ed5 terminal, ch\u01b0\u01a1ng tr\u00ecnh  make  s\u1ebd t\u00ecm v\u00e0 \u0111\u1ecdc file m\u1eb7c \u0111\u1ecbnh c\u00f3 t\u00ean  Makefile  \u1edf th\u01b0 m\u1ee5c hi\u1ec7n h\u00e0nh v\u00e0 th\u1ef1c thi n\u00f3.",
            "title": "Makefile"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/",
            "text": "ESP8266 c\u01a1 b\u1ea3n\n#\n\n\nTrong ch\u01b0\u01a1ng n\u00e0y ch\u00fang ta s\u1ebd l\u1eadp tr\u00ecnh c\u01a1 b\u1ea3n v\u1ec1 ESP8266, bi\u00ean d\u1ecbch 1 d\u1ef1 \u00e1n m\u1eabu, l\u00e0m sao \u0111\u1ec3 k\u1ebft n\u1ed1i \u0111\u1ebfn m\u1ea1ng Wi-Fi hi\u1ec7n t\u1ea1i. S\u1eed d\u1ee5ng c\u00e1c module ph\u1ea7n c\u1ee9ng c\u1ee7a ESP8266 nh\u01b0 GPIO (LED, n\u00fat nh\u1ea5n), c\u1ed5ng d\u1eef li\u1ec7u UART (TX & RX), I2C, SPI, ADC \u2026\n\n\nC\u00e0i \u0111\u1eb7t c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft\n#\n\n\n\n\nTr\u00ecnh so\u1ea1n th\u1ea3o tr\u00ean m\u00e1y t\u00ednh, \u0111\u1ec3 vi\u1ebft m\u00e3 ngu\u1ed3n \nC\n\n\nTr\u00ecnh bi\u00ean d\u1ecbch, nh\u1eb1m m\u1ee5c \u0111\u1ecbch bi\u00ean d\u1ecbch m\u00e3 ngu\u1ed3n \nC\n sang m\u00e3 m\u00e1y\n\n\nTr\u00ecnh n\u1ea1p, n\u1ea1p m\u00e3 m\u00e1y \u0111\u00e3 bi\u00ean d\u1ecbch xu\u1ed1ng Flash c\u1ee7a ESP8266\n\n\nSDK\n\n\n\n\nC\u00e0i \u0111\u1eb7t tr\u00ecnh bi\u00ean d\u1ecbch & c\u00e1c th\u01b0 vi\u1ec7n c\u01a1 b\u1ea3n\n#\n\n\nMacOS/OSX\n#\n\n\nB\u1ea1n c\u00f3 \u00edt nh\u1ea5t 2 c\u00e1ch \u0111\u1ec3 c\u00f3 tr\u00ecnh bi\u00ean d\u1ecbch, \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 t\u1ea3i v\u1ec1 t\u1eeb 1 trong c\u00e1c link sau:\n\n\n\n\nxtensa-lx106-elf.zip\n\n\n\n\nv\u00e0 gi\u1ea3i n\u00e9n v\u00e0o th\u01b0 m\u1ee5c: \n/tools/esp8266/compiler/\n\n\nC\u00e1ch 2\n ph\u1ee9c t\u1ea1p h\u01a1n, nh\u01b0ng s\u1ebd ph\u00f9 h\u1ee3p v\u1edbi t\u1ea5t c\u1ea3 phi\u00ean b\u1ea3n h\u1ec7 \u0111i\u1ec1u h\u00e0nh c\u1ee7a b\u1ea1n. Bi\u00ean d\u1ecbch Tr\u00ecnh bi\u00ean d\u1ecbch t\u1eeb m\u00e3 ngu\u1ed3n:\n\n\nsudo port install git gsed gawk binutils gperf grep gettext py-serial wget libtool autoconf automake \n\nhdiutil create -size 5g -fs \"Case-sensitive HFS+\" -volname ESPTools ESPTools.sparsebundle \nhdiutil attach ESPTools.sparsebundle <3>\nsudo ln -s /Volumes/ESPTools/ /tools <3>\nmkdir /tools/esp8266 <4>\nmkdir /tools/esp8266/sdk <4>\nmkdir /tools/esp8266/compiler <4>\ncd /tools/esp8266/compiler\n\ngit clone -b lx106 git://github.com/jcmvbkbc/crosstool-NG.git <5>\ncd crosstool-NG\nsed -i.bak '1s/^/gettext=\\'$'\\n/' crosstool-NG/kconfig/Makefile\n./bootstrap && ./configure --prefix=`pwd` && make && make install\n./ct-ng xtensa-lx106-elf\n./ct-ng build\n\n\n\n\n\n\nC\u00e1c th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft \u0111\u1ec3 bi\u00ean d\u1ecbch crosstool-NG, s\u1eed d\u1ee5ng MacPorts \u0111\u1ec3 c\u00e0i \u0111\u1eb7t. N\u1ebfu ch\u01b0a c\u00e0i \u0111\u1eb7t MacPorts c\u00f3 th\u1ebb t\u1ea3i t\u1ea1i \u0111\u00e2y: https://www.macports.org/\n\n\nBi\u00ean d\u1ecbch \ncrosstool-NG\n c\u1ea7n \u0111\u1ecbnh d\u1ea1ng \u1ed5 c\u1ee9ng h\u1ed7 tr\u1ee3 ph\u00e2n bi\u1ec7t \u0111\u01b0\u1eddng d\u1eabn ch\u1eef Hoa v\u00e0 ch\u1eef th\u01b0\u1eddng, n\u00ean c\u1ea7n t\u1ea1o m\u1ed9t \u1ed5 \u0111\u0129a \u1ea3o nh\u01b0 v\u1eady.\n\n\nMount \u1ed5 \u0111\u0129a \nESPTools ESPTools.sparsebundle\n t\u1edbi th\u01b0 m\u1ee5c \n/tools/\n\n\nT\u1ea1o c\u00e1c th\u01b0 m\u1ee5c cho \u0111\u1ec3 ch\u1ee9a SDK, tr\u00ecnh bi\u00ean d\u1ecbch v\u00e0 c\u00f4ng c\u1ee5 n\u1ea1p\n\n\nClone d\u1ef1 \u00e1n crosstool-NG, nh\u00e1nh \nlx106\n v\u1ec1, ti\u1ebfn h\u00e0nh c\u00e1c thao t\u00e1c bi\u00ean d\u1ecbch\n\n\n\n\nL\u01b0u \u00fd\n#\n\n\nL\u01b0u \u00fd r\u1eb1ng, qu\u00e1 tr\u00ecnh bi\u00ean d\u1ecbch c\u1ea7n kho\u1ea3ng 1 gi\u1edd (t\u00f9y c\u1ea5u h\u00ecnh m\u00e1y) v\u00e0 1.5GiB dung l\u01b0\u1ee3ng \u1ed5 c\u1ee9ng tr\u1ed1ng\n\n\nTi\u1ebfp theo, c\u1ea7n ph\u1ea3i th\u00eam \u0111\u01b0\u1eddng d\u1eabn c\u1ee7a compiler v\u00e0o bi\u1ebfn m\u00f4i tr\u01b0\u1eddng \nPATH\n c\u1ee7a h\u1ec7 \u0111i\u1ec1u h\u00e0nh\n\n\necho \"export PATH=$PATH:/tools/esp8266/compiler/crosstool-NG/builds/xtensa-lx106-elf/bin\" >>  ~/.bash_profile <1>\nsource ~/.bash_profile \n\n\n\n\n\n\nTh\u00eam d\u00f2ng \nexport\n v\u00e0o cu\u1ed1i file \n~/.bash_profile\n b\u1eb1ng \necho\n\n\nsource\n \u0111\u1ec3 t\u1ea3i l\u1ea1i bi\u1ebfn m\u00f4i tr\u01b0\u1eddng\n\n\n\n\nKi\u1ec3m tra vi\u1ec7c c\u00e0i \u0111\u1eb7t, C\u00f3 d\u00f2ng n\u00e0y hi\u1ec3n th\u1ecb \u1edf cu\u1ed1i c\u00f9ng th\u00ec vi\u1ec7c c\u00e0i \u0111\u1eb7t d\u00e3 th\u00e0nh c\u00f4ng\n\n\nxtensa-lx106-elf-gcc -v\ngcc version 4.8.2 (crosstool-NG 1.20.0) \n\n\n\n\nWindows\n#\n\n\nC\u00e0i \u0111\u1eb7t Git\n- https://desktop.github.com/\n\n\nT\u1ea3i v\u1ec1 t\u1ea1i m\u1ed9t trong c\u00e1c \u0111\u1ecba ch\u1ec9 sau:\n\n\n\n\nhttp://programs74.ru/udkew-en.html\n\n\nLink Dropbox\n\n\n\n\nLinux\n#\n\n\nC\u00e0i \u0111\u1eb7t Git\n\n\nsudo apt-get update\nsudo apt-get install git\n\n\n\n\nC\u00e0i \u0111\u1eb7t complier\n\n\ngit clone https://github.com/pfalcon/esp-open-sdk.git\n\nsudo apt-get install make unrar autoconf automake libtool gcc g++ gperf \\\n    flex bison texinfo gawk ncurses-dev libexpat-dev python sed\n\ncd esp-open-sdk\nunset LD_LIBRARY_PATH\nmake\n\n\n\n\nTr\u01b0\u1eddng h\u1ee3p g\u1eb7p l\u1ed7i help2man update b\u1eb1ng l\u1ec7nh sau\n\n\nsudo apt-get update\nsudo apt-get install help2man\n\n\n\n\nTr\u01b0\u1eddng h\u1ee3p l\u1ed7i configure: error: could not find GNU libtool >= 1.5.26 fix b\u1eb1ng l\u1ec7nh\n\n\napt-get install libtool-bin\n\n\n\n\nSau khi ch\u1ea1y \nmake\n xong (m\u1ea5t kho\u1ea3ng h\u01a1n 30ph) th\u00ec s\u1ebd c\u00f3 th\u00f4ng b\u00e1o nh\u01b0 sau\n\n\nXtensa toolchain is built, to use it:\n\nexport PATH=/home/hocarm/esp-open-sdk/xtensa-lx106-elf/bin:$PATH\n\n\n\n\nCh\u1ea1y l\u1ec7nh export \u0111\u1ec3 s\u1eed d\u1ee5ng eXtnsa\n\n\nKi\u1ec3m tra vi\u1ec7c c\u00e0i \u0111\u1eb7t b\u1eb1ng l\u1ec7nh\n\n\nxtensa-lx106-elf-gcc -v\n\n\nC\u00f3 d\u00f2ng n\u00e0y hi\u1ec3n th\u1ecb \u1edf cu\u1ed1i c\u00f9ng th\u00ec vi\u1ec7c c\u00e0i \u0111\u1eb7t d\u00e3 th\u00e0nh c\u00f4ng\n\n\nThread model: single\ngcc version 4.8.5 (crosstool-NG crosstool-ng-1.22.0-55-gecfc19a) \n\n\n\n\nC\u00f3 th\u1ec3 xem th\u00eam \nlog\n c\u00e0i \u0111\u1eb7t tham kh\u1ea3o\n\n\nT\u1ea3i SDK\n#\n\n\nT\u1ea3i ESP8266-NONOS-SDK 2.0 t\u1eeb m\u1ed9t trong c\u00e1c ngu\u1ed3n sau: \n\n\n\n\nhttp://bbs.espressif.com/viewtopic.php?f=46&t=2451\n\n\nDropbox ESP8266-NONOS-SDK\n\n\n\n\nGi\u1ea3i n\u00e9n ra (v\u00ed d\u1ee5 t\u1ea1i th\u01b0 m\u1ee5c: \n/tools/esp8266/sdk/ESP8266_NONOS_SDK\n)\n\n\nT\u1ea3i \nesptool.py\n#\n\n\ngit clone https://github.com/themadinventor/esptool.git\n t\u1ea1i th\u01b0 m\u1ee5c \n/tools/esp8266/\n\n\nHo\u1eb7c Download t\u1eeb \nDropbox\n v\u00e0 gi\u1ea3i n\u00e9n v\u00e0o th\u01b0 m\u1ee5c \n/tools/esp8266/\n\n\nC\u00f4ng c\u1ee5 COM Terminal\n#\n\n\n\n\nMinicom\n\n\nCoolTerm\n\n\n\n\nT\u1ea3i t\u00e0i li\u1ec7u t\u1eeb Espressif\n#\n\n\nhttp://espressif.com\n\n\nC\u1ea5u h\u00ecnh ch\u00e2n n\u1ea1p\n#",
            "title": "C\u00e0i \u0111\u1eb7t c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#esp8266-co-ban",
            "text": "Trong ch\u01b0\u01a1ng n\u00e0y ch\u00fang ta s\u1ebd l\u1eadp tr\u00ecnh c\u01a1 b\u1ea3n v\u1ec1 ESP8266, bi\u00ean d\u1ecbch 1 d\u1ef1 \u00e1n m\u1eabu, l\u00e0m sao \u0111\u1ec3 k\u1ebft n\u1ed1i \u0111\u1ebfn m\u1ea1ng Wi-Fi hi\u1ec7n t\u1ea1i. S\u1eed d\u1ee5ng c\u00e1c module ph\u1ea7n c\u1ee9ng c\u1ee7a ESP8266 nh\u01b0 GPIO (LED, n\u00fat nh\u1ea5n), c\u1ed5ng d\u1eef li\u1ec7u UART (TX & RX), I2C, SPI, ADC \u2026",
            "title": "ESP8266 c\u01a1 b\u1ea3n"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#cai-at-cong-cu-can-thiet",
            "text": "Tr\u00ecnh so\u1ea1n th\u1ea3o tr\u00ean m\u00e1y t\u00ednh, \u0111\u1ec3 vi\u1ebft m\u00e3 ngu\u1ed3n  C  Tr\u00ecnh bi\u00ean d\u1ecbch, nh\u1eb1m m\u1ee5c \u0111\u1ecbch bi\u00ean d\u1ecbch m\u00e3 ngu\u1ed3n  C  sang m\u00e3 m\u00e1y  Tr\u00ecnh n\u1ea1p, n\u1ea1p m\u00e3 m\u00e1y \u0111\u00e3 bi\u00ean d\u1ecbch xu\u1ed1ng Flash c\u1ee7a ESP8266  SDK",
            "title": "C\u00e0i \u0111\u1eb7t c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#cai-at-trinh-bien-dich-cac-thu-vien-co-ban",
            "text": "",
            "title": "C\u00e0i \u0111\u1eb7t tr\u00ecnh bi\u00ean d\u1ecbch &amp; c\u00e1c th\u01b0 vi\u1ec7n c\u01a1 b\u1ea3n"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#macososx",
            "text": "B\u1ea1n c\u00f3 \u00edt nh\u1ea5t 2 c\u00e1ch \u0111\u1ec3 c\u00f3 tr\u00ecnh bi\u00ean d\u1ecbch, \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 t\u1ea3i v\u1ec1 t\u1eeb 1 trong c\u00e1c link sau:   xtensa-lx106-elf.zip   v\u00e0 gi\u1ea3i n\u00e9n v\u00e0o th\u01b0 m\u1ee5c:  /tools/esp8266/compiler/  C\u00e1ch 2  ph\u1ee9c t\u1ea1p h\u01a1n, nh\u01b0ng s\u1ebd ph\u00f9 h\u1ee3p v\u1edbi t\u1ea5t c\u1ea3 phi\u00ean b\u1ea3n h\u1ec7 \u0111i\u1ec1u h\u00e0nh c\u1ee7a b\u1ea1n. Bi\u00ean d\u1ecbch Tr\u00ecnh bi\u00ean d\u1ecbch t\u1eeb m\u00e3 ngu\u1ed3n:  sudo port install git gsed gawk binutils gperf grep gettext py-serial wget libtool autoconf automake \n\nhdiutil create -size 5g -fs \"Case-sensitive HFS+\" -volname ESPTools ESPTools.sparsebundle \nhdiutil attach ESPTools.sparsebundle <3>\nsudo ln -s /Volumes/ESPTools/ /tools <3>\nmkdir /tools/esp8266 <4>\nmkdir /tools/esp8266/sdk <4>\nmkdir /tools/esp8266/compiler <4>\ncd /tools/esp8266/compiler\n\ngit clone -b lx106 git://github.com/jcmvbkbc/crosstool-NG.git <5>\ncd crosstool-NG\nsed -i.bak '1s/^/gettext=\\'$'\\n/' crosstool-NG/kconfig/Makefile\n./bootstrap && ./configure --prefix=`pwd` && make && make install\n./ct-ng xtensa-lx106-elf\n./ct-ng build   C\u00e1c th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft \u0111\u1ec3 bi\u00ean d\u1ecbch crosstool-NG, s\u1eed d\u1ee5ng MacPorts \u0111\u1ec3 c\u00e0i \u0111\u1eb7t. N\u1ebfu ch\u01b0a c\u00e0i \u0111\u1eb7t MacPorts c\u00f3 th\u1ebb t\u1ea3i t\u1ea1i \u0111\u00e2y: https://www.macports.org/  Bi\u00ean d\u1ecbch  crosstool-NG  c\u1ea7n \u0111\u1ecbnh d\u1ea1ng \u1ed5 c\u1ee9ng h\u1ed7 tr\u1ee3 ph\u00e2n bi\u1ec7t \u0111\u01b0\u1eddng d\u1eabn ch\u1eef Hoa v\u00e0 ch\u1eef th\u01b0\u1eddng, n\u00ean c\u1ea7n t\u1ea1o m\u1ed9t \u1ed5 \u0111\u0129a \u1ea3o nh\u01b0 v\u1eady.  Mount \u1ed5 \u0111\u0129a  ESPTools ESPTools.sparsebundle  t\u1edbi th\u01b0 m\u1ee5c  /tools/  T\u1ea1o c\u00e1c th\u01b0 m\u1ee5c cho \u0111\u1ec3 ch\u1ee9a SDK, tr\u00ecnh bi\u00ean d\u1ecbch v\u00e0 c\u00f4ng c\u1ee5 n\u1ea1p  Clone d\u1ef1 \u00e1n crosstool-NG, nh\u00e1nh  lx106  v\u1ec1, ti\u1ebfn h\u00e0nh c\u00e1c thao t\u00e1c bi\u00ean d\u1ecbch",
            "title": "MacOS/OSX"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#luu-y",
            "text": "L\u01b0u \u00fd r\u1eb1ng, qu\u00e1 tr\u00ecnh bi\u00ean d\u1ecbch c\u1ea7n kho\u1ea3ng 1 gi\u1edd (t\u00f9y c\u1ea5u h\u00ecnh m\u00e1y) v\u00e0 1.5GiB dung l\u01b0\u1ee3ng \u1ed5 c\u1ee9ng tr\u1ed1ng  Ti\u1ebfp theo, c\u1ea7n ph\u1ea3i th\u00eam \u0111\u01b0\u1eddng d\u1eabn c\u1ee7a compiler v\u00e0o bi\u1ebfn m\u00f4i tr\u01b0\u1eddng  PATH  c\u1ee7a h\u1ec7 \u0111i\u1ec1u h\u00e0nh  echo \"export PATH=$PATH:/tools/esp8266/compiler/crosstool-NG/builds/xtensa-lx106-elf/bin\" >>  ~/.bash_profile <1>\nsource ~/.bash_profile    Th\u00eam d\u00f2ng  export  v\u00e0o cu\u1ed1i file  ~/.bash_profile  b\u1eb1ng  echo  source  \u0111\u1ec3 t\u1ea3i l\u1ea1i bi\u1ebfn m\u00f4i tr\u01b0\u1eddng   Ki\u1ec3m tra vi\u1ec7c c\u00e0i \u0111\u1eb7t, C\u00f3 d\u00f2ng n\u00e0y hi\u1ec3n th\u1ecb \u1edf cu\u1ed1i c\u00f9ng th\u00ec vi\u1ec7c c\u00e0i \u0111\u1eb7t d\u00e3 th\u00e0nh c\u00f4ng  xtensa-lx106-elf-gcc -v\ngcc version 4.8.2 (crosstool-NG 1.20.0)",
            "title": "L\u01b0u \u00fd"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#windows",
            "text": "C\u00e0i \u0111\u1eb7t Git\n- https://desktop.github.com/  T\u1ea3i v\u1ec1 t\u1ea1i m\u1ed9t trong c\u00e1c \u0111\u1ecba ch\u1ec9 sau:   http://programs74.ru/udkew-en.html  Link Dropbox",
            "title": "Windows"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#linux",
            "text": "C\u00e0i \u0111\u1eb7t Git  sudo apt-get update\nsudo apt-get install git  C\u00e0i \u0111\u1eb7t complier  git clone https://github.com/pfalcon/esp-open-sdk.git\n\nsudo apt-get install make unrar autoconf automake libtool gcc g++ gperf \\\n    flex bison texinfo gawk ncurses-dev libexpat-dev python sed\n\ncd esp-open-sdk\nunset LD_LIBRARY_PATH\nmake  Tr\u01b0\u1eddng h\u1ee3p g\u1eb7p l\u1ed7i help2man update b\u1eb1ng l\u1ec7nh sau  sudo apt-get update\nsudo apt-get install help2man  Tr\u01b0\u1eddng h\u1ee3p l\u1ed7i configure: error: could not find GNU libtool >= 1.5.26 fix b\u1eb1ng l\u1ec7nh  apt-get install libtool-bin  Sau khi ch\u1ea1y  make  xong (m\u1ea5t kho\u1ea3ng h\u01a1n 30ph) th\u00ec s\u1ebd c\u00f3 th\u00f4ng b\u00e1o nh\u01b0 sau  Xtensa toolchain is built, to use it:\n\nexport PATH=/home/hocarm/esp-open-sdk/xtensa-lx106-elf/bin:$PATH  Ch\u1ea1y l\u1ec7nh export \u0111\u1ec3 s\u1eed d\u1ee5ng eXtnsa  Ki\u1ec3m tra vi\u1ec7c c\u00e0i \u0111\u1eb7t b\u1eb1ng l\u1ec7nh  xtensa-lx106-elf-gcc -v  C\u00f3 d\u00f2ng n\u00e0y hi\u1ec3n th\u1ecb \u1edf cu\u1ed1i c\u00f9ng th\u00ec vi\u1ec7c c\u00e0i \u0111\u1eb7t d\u00e3 th\u00e0nh c\u00f4ng  Thread model: single\ngcc version 4.8.5 (crosstool-NG crosstool-ng-1.22.0-55-gecfc19a)   C\u00f3 th\u1ec3 xem th\u00eam  log  c\u00e0i \u0111\u1eb7t tham kh\u1ea3o",
            "title": "Linux"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#tai-sdk",
            "text": "T\u1ea3i ESP8266-NONOS-SDK 2.0 t\u1eeb m\u1ed9t trong c\u00e1c ngu\u1ed3n sau:    http://bbs.espressif.com/viewtopic.php?f=46&t=2451  Dropbox ESP8266-NONOS-SDK   Gi\u1ea3i n\u00e9n ra (v\u00ed d\u1ee5 t\u1ea1i th\u01b0 m\u1ee5c:  /tools/esp8266/sdk/ESP8266_NONOS_SDK )",
            "title": "T\u1ea3i SDK"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#tai-esptoolpy",
            "text": "git clone https://github.com/themadinventor/esptool.git  t\u1ea1i th\u01b0 m\u1ee5c  /tools/esp8266/  Ho\u1eb7c Download t\u1eeb  Dropbox  v\u00e0 gi\u1ea3i n\u00e9n v\u00e0o th\u01b0 m\u1ee5c  /tools/esp8266/",
            "title": "T\u1ea3i esptool.py"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#cong-cu-com-terminal",
            "text": "Minicom  CoolTerm",
            "title": "C\u00f4ng c\u1ee5 COM Terminal"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#tai-tai-lieu-tu-espressif",
            "text": "http://espressif.com",
            "title": "T\u1ea3i t\u00e0i li\u1ec7u t\u1eeb Espressif"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/00-esp-basic/#cau-hinh-chan-nap",
            "text": "",
            "title": "C\u1ea5u h\u00ecnh ch\u00e2n n\u1ea1p"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/",
            "text": "Bi\u00ean d\u1ecbch d\u1ef1 \u00e1n \u0111\u1ea7u ti\u00ean\n#\n\n\nTr\u01b0\u1edbc khi bi\u00ean d\u1ecbch d\u1ef1 \u00e1n m\u1eabu, b\u1ea1n c\u1ea7n ph\u1ea3i c\u00e0i \u0111\u1eb7t \u0111\u1ea7y \u0111\u1ee7 \nTr\u00ecnh bi\u00ean d\u1ecbch\n, t\u1ea3i v\u1ec1 \nesptool.py\n v\u00e0 \nESP8266-NONOS-SDK\n nh\u01b0 h\u01b0\u1edbng d\u1eabn C\u00e0i \u0111\u1eb7t\n\n\nTrong ph\u1ea7n n\u00e0y s\u1ebd tr\u00ecnh b\u00e0y r\u1ea5t chi ti\u1ebft \u0111\u1ec3 bi\u00ean d\u1ecbch m\u1ed9t d\u1ef1 \u00e1n ho\u00e0n ch\u1ec9nh, bao g\u1ed3m m\u1ed9t s\u1ed1 ki\u1ebfn th\u1ee9c b\u1ed5 tr\u1ee3 li\u00ean quan t\u1edbi l\u1eadp tr\u00ecnh \nC\n v\u00e0 \u0111\u01b0\u1ee3c gi\u1ea3i th\u00edch r\u00f5 r\u00e0ng, c\u1ea9n th\u1eadn. B\u1ea1n c\u00f3 th\u1ec3 b\u1ecf qua ph\u1ea7n n\u00e0y n\u1ebfu \u0111\u00e3 hi\u1ec3u r\u00f5 v\u1ec1 \nl\u1eadp tr\u00ecnh C\n\n\nL\u1ea5y d\u1ef1 \u00e1n m\u1eabu t\u1eeb Github:\n#\n\n\nB\u1ea1n c\u00f3 th\u1ec3 l\u1ea5y d\u1ef1 \u00e1n m\u1eabu t\u1eeb github v\u00e0 bi\u00ean d\u1ecbch ngay:\n\n\ngit clone https://github.com/esp8266vn/esp-iot-basic.git\ncd esp-iot-basic && make\n\n\n\n\nS\u01a1 \u0111\u1ed3 file\n#\n\n\nesp-helloworld\n    |-- Makefile\n    |-- main.c\n    |-- rf_init.c\n    `-- user_config.h\n\n\n\n\n\n\nMakefile\n Gi\u00fap cho c\u00f4ng c\u1ee5 \nmake\n th\u1ef1c hi\u1ec7n vi\u1ec7c bi\u00ean d\u1ecbch d\u1ef1 \u00e1n m\u1ed9t c\u00e1ch t\u1ef1 \u0111\u1ed9ng\n\n\nmain.c\n Ch\u1ee9a m\u00e3 ngu\u1ed3n th\u1ef1c thi ch\u00ednh c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh\n\n\nrf_init.c\n Khi kh\u1edfi \u0111\u1ed9ng, {esp} s\u1ebd th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 l\u1ec7nh c\u1ea5u h\u00ecnh RF (thu ph\u00e1t kh\u00f4ng d\u00e2y), SDK s\u1ebd g\u1ecdi c\u00e1c h\u00e0m n\u00e0y. B\u1ea1n b\u1eaft bu\u1ed9c ph\u1ea3i cung c\u1ea5p gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 cho n\u00f3.\n\n\nuser_config.h\n Khi bi\u00ean d\u1ecbch, SDK s\u1ebd \ninclude\n file n\u00e0y, b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ec3 file tr\u1ed1ng kh\u00f4ng n\u1ed9i dung.\n\n\n\n\nMakefile\n#\n\n\n#esp-helloworld/Makefile\nXTENSA    ?= \nSDK_BASE  ?= /tools/esp8266/sdk/ESP8266_NONOS_SDK \nESPTOOL   ?= /tools/esp8266/esptool/esptool.py\nSDK_LIBS  := -lc -lgcc -lhal -lphy -lpp -lnet80211 -lwpa -lmain\\\n            -llwip -lcrypto -ljson \nCC        := $(XTENSA)xtensa-lx106-elf-gcc\nLD        := $(XTENSA)xtensa-lx106-elf-gcc\nAR        := $(XTENSA)xtensa-lx106-elf-ar\nLDFLAGS   = -nostdlib -Wl,--no-check-sections -u call_user_start -Wl,-static\nCFLAGS    = -g -Wpointer-arith -Wundef -Wl,-EL -fno-inline-functions -nostdlib\\ \n        -mlongcalls -mtext-section-literals -ffunction-sections -fdata-sections\\\n        -fno-builtin-printf -DICACHE_FLASH\\\n        -I.\\\n        -I$(SDK_BASE)/include\nLD_SCRIPT = -T$(SDK_BASE)/ld/eagle.app.v6.ld \n\nall: main.bin\n\nmain.bin: main.out\n  $(ESPTOOL) elf2image $(ESPTOOL_FLASHDEF) main.out -o main\n\nmain.out: main.a\n  @echo \"LD main.out\"\n  $(LD) -L$(SDK_BASE)/lib $(LD_SCRIPT) $(LDFLAGS) -L$(SDK_BASE)/lib\\\n  -Wl,--start-group $(SDK_LIBS) main.a -Wl,--end-group -o main.out \n\nmain.a: main.o\n  @echo \"AR main.o\"\n  $(AR) cru main.a main.\n\nmain.o:\n  @echo \"CC main.c & rf_init.c\"\n  $(CC) $(CFLAGS) -c main.c -o main.o <14>\n  $(CC) $(CFLAGS) -c rf_init.c -o rf_init.o <14>\n\nclean:\n  rm -rf *.o *.bin *.a *.out \n\nflash:\n  $(ESPTOOL) --port /dev/tty.SLAB_USBtoUART \\\n                   --baud 480600 \\\n                   write_flash --flash_freq 40m --flash_mode dio --flash_size 32m \\\n                   0x00000 main0x00000.bin \\\n                   0x10000 main0x10000.bin \\\n                   0x3fc000 $(SDK_BASE)/bin/esp_init_data_default.bin\n.PHONY: all clean flash\n\n\n\n\nGi\u1ea3i th\u00edch Makefile nh\u01b0 sau:\n\n\n\n\nXTENSA\n \u0110\u01b0\u1eddng d\u1eabn t\u1edbi tr\u00ecnh bi\u00ean d\u1ecbch, \u0111\u1ec3 tr\u1ed1ng n\u1ebfu b\u1ea1n \u0111\u00e3 th\u00eam v\u00e0o bi\u1ebfn m\u00f4i tr\u01b0\u1eddng \nPATH\n c\u1ee7a h\u1ec7 \u0111i\u1ec1u h\u00e0nh, ho\u1eb7c c\u00f3 d\u1ea1ng \n/tools/esp8266/compiler/xtensa-lx106-elf/bin/\n\n\nSDK_BASE\n \u0110\u01b0\u1eddng d\u1eabn t\u1edbi \nSDK\n, n\u1ebfu l\u00e0 Windows c\u00f3 d\u1ea1ng \nC:\\Espressif\\ESP8266_NONOS_SDK\n\n\nESPTOOL\n \u0110\u01b0\u1eddng d\u1eabn t\u1edbi \nesptool.py\n, nh\u1edb \u0111\u1ea3m b\u1ea3o quy\u1ec1n th\u1ef1c thi cho file n\u00e0y (th\u1ef1c hi\u1ec7n l\u1ec7nh \nchmod +x\n)\n\n\nSDK_LIBS\n C\u00e1c th\u01b0 vi\u1ec7n \u0111i k\u00e8m v\u1edbi \nSDK\n, v\u00ed d\u1ee5 n\u1ebfu b\u1ea1n d\u00f9ng \nsmartconfig\n th\u00ec th\u00eam v\u00e0o \n-lsmartconfig\n\n\nCC\n, \nAR\n, \nLD\n \u0110\u1ecbnh ngh\u0129a ng\u1eafn g\u1ecdn Compiler, Linker, Archiver\n\n\nLDFLAGS\n l\u00e0 c\u1edd d\u00e0nh cho Linker \n\n\nCFLAGS\n l\u00e0 c\u1edd d\u00e0nh cho Compiler\n\n\nC\u1edd \n-I.\n \u0111\u1ec3 b\u00e1o Compiler bi\u1ebft c\u00f3 th\u1ec3 t\u00ecm header file (t\u1eeb kh\u00f3a \n#include\n) trong th\u01b0 m\u1ee5c hi\u1ec7n t\u1ea1i v\u00e0 SDK include\n\n\nLD_SCRIPT\n Linker scirpt m\u1eb7c \u0111\u1ecbnh c\u1ee7a \nSDK\n cho chip ESP8266\n\n\n\n\nM\u1eb7c \u0111\u1ecbnh khi g\u1ecdi \nmake\n hay \nmake all\n s\u1ebd g\u1ecdi \nall\n, nh\u01b0ng tr\u01b0\u1edbc \u0111\u00f3 s\u1ebd c\u1ea7n g\u1ecdi \nmain.bin\n\n\n\n\n\n\nTh\u1ef1c hi\u1ec7n \nmake clean\n x\u00f3a h\u1ebft c\u00e1c file \u0111\u01b0\u1ee3c t\u1ea1o ra khi g\u1ecdi \nmake all\n\n\n\n\nTh\u1ef1c hi\u1ec7n \nmake flash\n \u0111\u1ec3 n\u1ea1p ESP8266, c\u1ea7n ch\u1eafc ch\u1eafc m\u1ea1ch n\u1ea1p \u0111\u00e3 \u0111\u01b0\u1ee3c k\u1ebft n\u1ed1i m\u00e1y t\u00ednh, v\u00e0 t\u00ean c\u1ed5ng \u0111\u01b0\u1ee3c thay th\u1ebf \u0111\u00fang cho \n/dev/tty.SLAB_USBtoUART\n. B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 vi\u1ec7c \u0111\u1ecdc t\u00ean c\u00f4ng COM tr\u00ean m\u00e1y t\u00ednh t\u1ea1i (OSX, Windows, Linux)\n\n\n\n\nQuan tr\u1ecdng\n#\n\n\n\n\nD\u1ea5u \n\\\n b\u00e1o ch\u01b0a k\u1ebft th\u00fac d\u00f2ng trong Makefile\n\n\nTrong \nMakefile\n, lu\u00f4n lu\u00f4n \u0111\u1eb7t ch\u1ebf \u0111\u1ed9 Indent l\u00e0 Tab, n\u1ebfu d\u00f9ng Space s\u1ebd b\u00e1o l\u1ed7i \nMakefile:35: *** missing separator.  Stop.\n\n\n\n\nC\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u r\u00f5 h\u01a1n v\u1ec1 Makefile b\u1eb1ng google v\u1edbi t\u1eeb kh\u00f3a \nMakefile basic\n. Makefile n\u00e0y nh\u01b0 l\u00e0 1 k\u1ecbch b\u1ea3n \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u0111\u1ec3 c\u00f4ng c\u1ee5 \nmake\n th\u1ef1c hi\u1ec7n vi\u1ec7c bi\u00ean d\u1ecbch m\u00e3 ngu\u1ed3n \nC\n sang m\u00e3 m\u00e1y \u0111\u1ec3 n\u1ea1p cho ESP8266. M\u1ee5c \u0111\u00edch \u0111\u1ec3 b\u1ea3n n\u1eafm r\u00f5 h\u01a1n v\u1ec1 c\u00e1ch th\u1ee9c ho\u1ea1t \u0111\u1ed9ng c\u1ee7a SDK, tr\u00ecnh bi\u00ean d\u1ecbch. C\u00e1c v\u00ed d\u1ee5 sau n\u00e0y s\u1ebd d\u00f9ng Makefile ph\u1ee9c t\u1ea1p h\u01a1n, v\u00e0 \u0111\u01b0\u1ee3c cung c\u1ea5p k\u00e8m v\u1edbi c\u00e1c d\u1ef1 \u00e1n m\u1eabu t\u1ea1i https://github.com/esp8266vn\n\n\nrf_init.c\n#\n\n\n//esp-helloworld/rf_init.c\n#include <stdio.h>\n#include \"osapi.h\"\n#include \"user_interface.h\"\n\nvoid __attribute__((weak)) user_rf_pre_init(void) //H\u00e0m n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c SDK g\u1ecdi c\u1ea5u h\u00ecnh c\u00f4ng su\u1ea5t ph\u00e1t WiFi\n{\n  system_phy_set_rfoption(1);\n  system_phy_set_max_tpw(82); //c\u00f4ng su\u1ea5t truy\u1ec1n, Gi\u00e1 tr\u1ecb t\u1eeb 1-82\n}\n\nuint32_t __attribute__((weak)) user_rf_cal_sector_set(void) \n{\n  enum flash_size_map size_map = system_get_flash_size_map();\n  uint32 rf_cal_sec = 0;\n\n  switch (size_map) {\n    case FLASH_SIZE_4M_MAP_256_256:\n      rf_cal_sec = 128 - 5;\n      break;\n\n    case FLASH_SIZE_8M_MAP_512_512:\n      rf_cal_sec = 256 - 5;\n      break;\n\n    case FLASH_SIZE_16M_MAP_512_512:\n    case FLASH_SIZE_16M_MAP_1024_1024:\n      rf_cal_sec = 512 - 5;\n      break;\n\n    case FLASH_SIZE_32M_MAP_512_512:\n    case FLASH_SIZE_32M_MAP_1024_1024:\n      rf_cal_sec = 1024 - 5;\n      break;\n\n    default:\n      rf_cal_sec = 0;\n      break;\n  }\n  return rf_cal_sec;\n}\n\n\n\n\nmain.c\n#\n\n\n#include <stdio.h>\n#include \"osapi.h\"\n#include \"user_interface.h\"\n\nvoid app_init()\n{\n    os_printf(\"hello world\\r\\n\");\n}\n\nvoid user_init(void)\n{\n    system_init_done_cb(app_init);\n}\n\n\n\n\nBi\u00ean d\u1ecbch\n#\n\n\nTh\u1ef1c hi\u1ec7n bi\u00ean d\u1ecbch d\u1ef1 \u00e1n\n\n\ncd esp-helloworld\nmake clean\nmake\nmake flash\n\n\n\n\nM\u00e0n h\u00ecnh Terminal k\u1ebft th\u00fac nh\u01b0 sau l\u00e0 \u0111\u00e3 ho\u00e0n th\u00e0nh vi\u1ec7c ghi v\u00e0o ESP8266:\n\n\nesptool.py v1.2-dev\nConnecting...\nRunning Cesanta flasher stub...\nFlash params set to 0x0240\nWriting 32768 @ 0x0... 32768 (100 %)\nWrote 32768 bytes at 0x0 in 0.8 seconds (334.0 kbit/s)...\nWriting 196608 @ 0x10000... 196608 (100 %)\nWrote 196608 bytes at 0x10000 in 4.7 seconds (334.5 kbit/s)...\nWriting 4096 @ 0x3fc000... 4096 (100 %)\nWrote 4096 bytes at 0x3fc000 in 0.1 seconds (320.4 kbit/s)...\nLeaving...\n\n\n\n\nK\u1ebft qu\u1ea3\n#\n\n\nM\u1edf c\u1ed5ng COM b\u1eb1ng b\u1ea5t k\u1ef3 ph\u1ea7n m\u1ec1m n\u00e0o h\u1ed7 tr\u1ee3. Windows c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u2026, MacOS/OSX, Linux th\u00ec s\u1eed d\u1ee5ng screen, minicom. Sau khi k\u1ebft n\u1ed1i xong, b\u1ea5m n\u00fat RESET tr\u00ean board ph\u00e1t tri\u1ec3n, b\u1ea1n s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c 1 lo\u1ea1t c\u00e1c k\u00fd t\u1ef1 l\u1ea1 \u0111\u1ea7u ti\u00ean. \u0110\u00f3 l\u00e0 c\u00e1c k\u00fd t\u1ef1 do c\u00e1c module c\u1ee7a SDK sinh ra, nh\u01b0ng tr\u01b0\u1edbc khi \u1ee9ng d\u1ee5ng m\u1eabu c\u1ea5u h\u00ecnh \u0111\u00fang t\u1ed1c \u0111\u1ed9 Baud:\n\n\n...\nhello world\nscandone",
            "title": "Bi\u00ean d\u1ecbch d\u1ef1 \u00e1n m\u1eabu"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/#bien-dich-du-an-au-tien",
            "text": "Tr\u01b0\u1edbc khi bi\u00ean d\u1ecbch d\u1ef1 \u00e1n m\u1eabu, b\u1ea1n c\u1ea7n ph\u1ea3i c\u00e0i \u0111\u1eb7t \u0111\u1ea7y \u0111\u1ee7  Tr\u00ecnh bi\u00ean d\u1ecbch , t\u1ea3i v\u1ec1  esptool.py  v\u00e0  ESP8266-NONOS-SDK  nh\u01b0 h\u01b0\u1edbng d\u1eabn C\u00e0i \u0111\u1eb7t  Trong ph\u1ea7n n\u00e0y s\u1ebd tr\u00ecnh b\u00e0y r\u1ea5t chi ti\u1ebft \u0111\u1ec3 bi\u00ean d\u1ecbch m\u1ed9t d\u1ef1 \u00e1n ho\u00e0n ch\u1ec9nh, bao g\u1ed3m m\u1ed9t s\u1ed1 ki\u1ebfn th\u1ee9c b\u1ed5 tr\u1ee3 li\u00ean quan t\u1edbi l\u1eadp tr\u00ecnh  C  v\u00e0 \u0111\u01b0\u1ee3c gi\u1ea3i th\u00edch r\u00f5 r\u00e0ng, c\u1ea9n th\u1eadn. B\u1ea1n c\u00f3 th\u1ec3 b\u1ecf qua ph\u1ea7n n\u00e0y n\u1ebfu \u0111\u00e3 hi\u1ec3u r\u00f5 v\u1ec1  l\u1eadp tr\u00ecnh C",
            "title": "Bi\u00ean d\u1ecbch d\u1ef1 \u00e1n \u0111\u1ea7u ti\u00ean"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/#lay-du-an-mau-tu-github",
            "text": "B\u1ea1n c\u00f3 th\u1ec3 l\u1ea5y d\u1ef1 \u00e1n m\u1eabu t\u1eeb github v\u00e0 bi\u00ean d\u1ecbch ngay:  git clone https://github.com/esp8266vn/esp-iot-basic.git\ncd esp-iot-basic && make",
            "title": "L\u1ea5y d\u1ef1 \u00e1n m\u1eabu t\u1eeb Github:"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/#so-o-file",
            "text": "esp-helloworld\n    |-- Makefile\n    |-- main.c\n    |-- rf_init.c\n    `-- user_config.h   Makefile  Gi\u00fap cho c\u00f4ng c\u1ee5  make  th\u1ef1c hi\u1ec7n vi\u1ec7c bi\u00ean d\u1ecbch d\u1ef1 \u00e1n m\u1ed9t c\u00e1ch t\u1ef1 \u0111\u1ed9ng  main.c  Ch\u1ee9a m\u00e3 ngu\u1ed3n th\u1ef1c thi ch\u00ednh c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh  rf_init.c  Khi kh\u1edfi \u0111\u1ed9ng, {esp} s\u1ebd th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 l\u1ec7nh c\u1ea5u h\u00ecnh RF (thu ph\u00e1t kh\u00f4ng d\u00e2y), SDK s\u1ebd g\u1ecdi c\u00e1c h\u00e0m n\u00e0y. B\u1ea1n b\u1eaft bu\u1ed9c ph\u1ea3i cung c\u1ea5p gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 cho n\u00f3.  user_config.h  Khi bi\u00ean d\u1ecbch, SDK s\u1ebd  include  file n\u00e0y, b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ec3 file tr\u1ed1ng kh\u00f4ng n\u1ed9i dung.",
            "title": "S\u01a1 \u0111\u1ed3 file"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/#makefile",
            "text": "#esp-helloworld/Makefile\nXTENSA    ?= \nSDK_BASE  ?= /tools/esp8266/sdk/ESP8266_NONOS_SDK \nESPTOOL   ?= /tools/esp8266/esptool/esptool.py\nSDK_LIBS  := -lc -lgcc -lhal -lphy -lpp -lnet80211 -lwpa -lmain\\\n            -llwip -lcrypto -ljson \nCC        := $(XTENSA)xtensa-lx106-elf-gcc\nLD        := $(XTENSA)xtensa-lx106-elf-gcc\nAR        := $(XTENSA)xtensa-lx106-elf-ar\nLDFLAGS   = -nostdlib -Wl,--no-check-sections -u call_user_start -Wl,-static\nCFLAGS    = -g -Wpointer-arith -Wundef -Wl,-EL -fno-inline-functions -nostdlib\\ \n        -mlongcalls -mtext-section-literals -ffunction-sections -fdata-sections\\\n        -fno-builtin-printf -DICACHE_FLASH\\\n        -I.\\\n        -I$(SDK_BASE)/include\nLD_SCRIPT = -T$(SDK_BASE)/ld/eagle.app.v6.ld \n\nall: main.bin\n\nmain.bin: main.out\n  $(ESPTOOL) elf2image $(ESPTOOL_FLASHDEF) main.out -o main\n\nmain.out: main.a\n  @echo \"LD main.out\"\n  $(LD) -L$(SDK_BASE)/lib $(LD_SCRIPT) $(LDFLAGS) -L$(SDK_BASE)/lib\\\n  -Wl,--start-group $(SDK_LIBS) main.a -Wl,--end-group -o main.out \n\nmain.a: main.o\n  @echo \"AR main.o\"\n  $(AR) cru main.a main.\n\nmain.o:\n  @echo \"CC main.c & rf_init.c\"\n  $(CC) $(CFLAGS) -c main.c -o main.o <14>\n  $(CC) $(CFLAGS) -c rf_init.c -o rf_init.o <14>\n\nclean:\n  rm -rf *.o *.bin *.a *.out \n\nflash:\n  $(ESPTOOL) --port /dev/tty.SLAB_USBtoUART \\\n                   --baud 480600 \\\n                   write_flash --flash_freq 40m --flash_mode dio --flash_size 32m \\\n                   0x00000 main0x00000.bin \\\n                   0x10000 main0x10000.bin \\\n                   0x3fc000 $(SDK_BASE)/bin/esp_init_data_default.bin\n.PHONY: all clean flash  Gi\u1ea3i th\u00edch Makefile nh\u01b0 sau:   XTENSA  \u0110\u01b0\u1eddng d\u1eabn t\u1edbi tr\u00ecnh bi\u00ean d\u1ecbch, \u0111\u1ec3 tr\u1ed1ng n\u1ebfu b\u1ea1n \u0111\u00e3 th\u00eam v\u00e0o bi\u1ebfn m\u00f4i tr\u01b0\u1eddng  PATH  c\u1ee7a h\u1ec7 \u0111i\u1ec1u h\u00e0nh, ho\u1eb7c c\u00f3 d\u1ea1ng  /tools/esp8266/compiler/xtensa-lx106-elf/bin/  SDK_BASE  \u0110\u01b0\u1eddng d\u1eabn t\u1edbi  SDK , n\u1ebfu l\u00e0 Windows c\u00f3 d\u1ea1ng  C:\\Espressif\\ESP8266_NONOS_SDK  ESPTOOL  \u0110\u01b0\u1eddng d\u1eabn t\u1edbi  esptool.py , nh\u1edb \u0111\u1ea3m b\u1ea3o quy\u1ec1n th\u1ef1c thi cho file n\u00e0y (th\u1ef1c hi\u1ec7n l\u1ec7nh  chmod +x )  SDK_LIBS  C\u00e1c th\u01b0 vi\u1ec7n \u0111i k\u00e8m v\u1edbi  SDK , v\u00ed d\u1ee5 n\u1ebfu b\u1ea1n d\u00f9ng  smartconfig  th\u00ec th\u00eam v\u00e0o  -lsmartconfig  CC ,  AR ,  LD  \u0110\u1ecbnh ngh\u0129a ng\u1eafn g\u1ecdn Compiler, Linker, Archiver  LDFLAGS  l\u00e0 c\u1edd d\u00e0nh cho Linker   CFLAGS  l\u00e0 c\u1edd d\u00e0nh cho Compiler  C\u1edd  -I.  \u0111\u1ec3 b\u00e1o Compiler bi\u1ebft c\u00f3 th\u1ec3 t\u00ecm header file (t\u1eeb kh\u00f3a  #include ) trong th\u01b0 m\u1ee5c hi\u1ec7n t\u1ea1i v\u00e0 SDK include  LD_SCRIPT  Linker scirpt m\u1eb7c \u0111\u1ecbnh c\u1ee7a  SDK  cho chip ESP8266   M\u1eb7c \u0111\u1ecbnh khi g\u1ecdi  make  hay  make all  s\u1ebd g\u1ecdi  all , nh\u01b0ng tr\u01b0\u1edbc \u0111\u00f3 s\u1ebd c\u1ea7n g\u1ecdi  main.bin    Th\u1ef1c hi\u1ec7n  make clean  x\u00f3a h\u1ebft c\u00e1c file \u0111\u01b0\u1ee3c t\u1ea1o ra khi g\u1ecdi  make all   Th\u1ef1c hi\u1ec7n  make flash  \u0111\u1ec3 n\u1ea1p ESP8266, c\u1ea7n ch\u1eafc ch\u1eafc m\u1ea1ch n\u1ea1p \u0111\u00e3 \u0111\u01b0\u1ee3c k\u1ebft n\u1ed1i m\u00e1y t\u00ednh, v\u00e0 t\u00ean c\u1ed5ng \u0111\u01b0\u1ee3c thay th\u1ebf \u0111\u00fang cho  /dev/tty.SLAB_USBtoUART . B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 vi\u1ec7c \u0111\u1ecdc t\u00ean c\u00f4ng COM tr\u00ean m\u00e1y t\u00ednh t\u1ea1i (OSX, Windows, Linux)",
            "title": "Makefile"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/#quan-trong",
            "text": "D\u1ea5u  \\  b\u00e1o ch\u01b0a k\u1ebft th\u00fac d\u00f2ng trong Makefile  Trong  Makefile , lu\u00f4n lu\u00f4n \u0111\u1eb7t ch\u1ebf \u0111\u1ed9 Indent l\u00e0 Tab, n\u1ebfu d\u00f9ng Space s\u1ebd b\u00e1o l\u1ed7i  Makefile:35: *** missing separator.  Stop.   C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u00ecm hi\u1ec3u r\u00f5 h\u01a1n v\u1ec1 Makefile b\u1eb1ng google v\u1edbi t\u1eeb kh\u00f3a  Makefile basic . Makefile n\u00e0y nh\u01b0 l\u00e0 1 k\u1ecbch b\u1ea3n \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u0111\u1ec3 c\u00f4ng c\u1ee5  make  th\u1ef1c hi\u1ec7n vi\u1ec7c bi\u00ean d\u1ecbch m\u00e3 ngu\u1ed3n  C  sang m\u00e3 m\u00e1y \u0111\u1ec3 n\u1ea1p cho ESP8266. M\u1ee5c \u0111\u00edch \u0111\u1ec3 b\u1ea3n n\u1eafm r\u00f5 h\u01a1n v\u1ec1 c\u00e1ch th\u1ee9c ho\u1ea1t \u0111\u1ed9ng c\u1ee7a SDK, tr\u00ecnh bi\u00ean d\u1ecbch. C\u00e1c v\u00ed d\u1ee5 sau n\u00e0y s\u1ebd d\u00f9ng Makefile ph\u1ee9c t\u1ea1p h\u01a1n, v\u00e0 \u0111\u01b0\u1ee3c cung c\u1ea5p k\u00e8m v\u1edbi c\u00e1c d\u1ef1 \u00e1n m\u1eabu t\u1ea1i https://github.com/esp8266vn",
            "title": "Quan tr\u1ecdng"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/#rf_initc",
            "text": "//esp-helloworld/rf_init.c\n#include <stdio.h>\n#include \"osapi.h\"\n#include \"user_interface.h\"\n\nvoid __attribute__((weak)) user_rf_pre_init(void) //H\u00e0m n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c SDK g\u1ecdi c\u1ea5u h\u00ecnh c\u00f4ng su\u1ea5t ph\u00e1t WiFi\n{\n  system_phy_set_rfoption(1);\n  system_phy_set_max_tpw(82); //c\u00f4ng su\u1ea5t truy\u1ec1n, Gi\u00e1 tr\u1ecb t\u1eeb 1-82\n}\n\nuint32_t __attribute__((weak)) user_rf_cal_sector_set(void) \n{\n  enum flash_size_map size_map = system_get_flash_size_map();\n  uint32 rf_cal_sec = 0;\n\n  switch (size_map) {\n    case FLASH_SIZE_4M_MAP_256_256:\n      rf_cal_sec = 128 - 5;\n      break;\n\n    case FLASH_SIZE_8M_MAP_512_512:\n      rf_cal_sec = 256 - 5;\n      break;\n\n    case FLASH_SIZE_16M_MAP_512_512:\n    case FLASH_SIZE_16M_MAP_1024_1024:\n      rf_cal_sec = 512 - 5;\n      break;\n\n    case FLASH_SIZE_32M_MAP_512_512:\n    case FLASH_SIZE_32M_MAP_1024_1024:\n      rf_cal_sec = 1024 - 5;\n      break;\n\n    default:\n      rf_cal_sec = 0;\n      break;\n  }\n  return rf_cal_sec;\n}",
            "title": "rf_init.c"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/#mainc",
            "text": "#include <stdio.h>\n#include \"osapi.h\"\n#include \"user_interface.h\"\n\nvoid app_init()\n{\n    os_printf(\"hello world\\r\\n\");\n}\n\nvoid user_init(void)\n{\n    system_init_done_cb(app_init);\n}",
            "title": "main.c"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/#bien-dich",
            "text": "Th\u1ef1c hi\u1ec7n bi\u00ean d\u1ecbch d\u1ef1 \u00e1n  cd esp-helloworld\nmake clean\nmake\nmake flash  M\u00e0n h\u00ecnh Terminal k\u1ebft th\u00fac nh\u01b0 sau l\u00e0 \u0111\u00e3 ho\u00e0n th\u00e0nh vi\u1ec7c ghi v\u00e0o ESP8266:  esptool.py v1.2-dev\nConnecting...\nRunning Cesanta flasher stub...\nFlash params set to 0x0240\nWriting 32768 @ 0x0... 32768 (100 %)\nWrote 32768 bytes at 0x0 in 0.8 seconds (334.0 kbit/s)...\nWriting 196608 @ 0x10000... 196608 (100 %)\nWrote 196608 bytes at 0x10000 in 4.7 seconds (334.5 kbit/s)...\nWriting 4096 @ 0x3fc000... 4096 (100 %)\nWrote 4096 bytes at 0x3fc000 in 0.1 seconds (320.4 kbit/s)...\nLeaving...",
            "title": "Bi\u00ean d\u1ecbch"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/01-compile-first-time/#ket-qua",
            "text": "M\u1edf c\u1ed5ng COM b\u1eb1ng b\u1ea5t k\u1ef3 ph\u1ea7n m\u1ec1m n\u00e0o h\u1ed7 tr\u1ee3. Windows c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u2026, MacOS/OSX, Linux th\u00ec s\u1eed d\u1ee5ng screen, minicom. Sau khi k\u1ebft n\u1ed1i xong, b\u1ea5m n\u00fat RESET tr\u00ean board ph\u00e1t tri\u1ec3n, b\u1ea1n s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c 1 lo\u1ea1t c\u00e1c k\u00fd t\u1ef1 l\u1ea1 \u0111\u1ea7u ti\u00ean. \u0110\u00f3 l\u00e0 c\u00e1c k\u00fd t\u1ef1 do c\u00e1c module c\u1ee7a SDK sinh ra, nh\u01b0ng tr\u01b0\u1edbc khi \u1ee9ng d\u1ee5ng m\u1eabu c\u1ea5u h\u00ecnh \u0111\u00fang t\u1ed1c \u0111\u1ed9 Baud:  ...\nhello world\nscandone",
            "title": "K\u1ebft qu\u1ea3"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/02-blink-led/",
            "text": "B\u1eadt t\u1eaft LED\n#\n\n\nT\u01b0\u01a1ng t\u1ef1 nh\u01b0 vi\u1ec7c bi\u00ean d\u1ecbch d\u1ef1 \u00e1n m\u1eabu trong ph\u1ea7n tr\u01b0\u1edbc, to\u00e0n b\u1ed9 c\u1ea5u tr\u00fac file, \nMakefile, user_config.h, rf_init.c\n gi\u1eef nguy\u00ean, ch\u1ec9 thay \u0111\u1ed5i n\u1ed9i dung file \nmain.c\n. M\u1ee5c \u0111\u00edch: Ch\u1edbp t\u1eaft \u0111\u00e8n LED m\u1ed7i 1 gi\u00e2y.\n\n\nL\u1ea5y d\u1ef1 \u00e1n v\u1ec1 t\u1eeb Github:\n#\n\n\ngit clone https://github.com/esp8266vn/esp-iot-led-blink.git\ncd esp-iot-led-blink && make\n\n\n\n\nM\u00e3 ngu\u1ed3n\n#\n\n\n//esp-led/main.c\n#include <stdio.h>\n#include \"osapi.h\"\n#include \"user_interface.h\"\nstatic os_timer_t led_timer;\nstatic int led_value = 0;\nvoid led_service_cb(void *args) //H\u00e0m n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi khi soft timer `led_timer` ho\u00e0n th\u00e0nh vi\u1ec7c \u0111\u1ebfm \n{\n    led_value ^= 0x01;\n    WRITE_PERI_REG(RTC_GPIO_OUT, (READ_PERI_REG(RTC_GPIO_OUT) & (uint32_t)0xfffffffe)| (uint32_t)(led_value & 1)); //Ghi gi\u00e1 tr\u1ecb ra LED IO, `led_value` khi th\u1ef1c hi\u1ec7n **XOR** v\u1edbi 1 s\u1ebd \u0111\u1ea3o gi\u00e1 tr\u1ecb gi\u1eefa 1 v\u00e0 0\n    os_printf(\"Blink\\r\\n\");\n}\nvoid app_init()\n{\n    //C\u1ea5u h\u00ecnh ng\u00f5 ra UART 115200 baud\n    uart_div_modify(0, UART_CLK_FREQ / 115200); \n\n    //C\u1ea5u h\u00ecnh ch\u00e2n LED l\u00e0 ch\u1ee9c n\u0103ng ch\u00ednh GPIO, ng\u00f5 ra \n    WRITE_PERI_REG(PAD_XPD_DCDC_CONF, (READ_PERI_REG(PAD_XPD_DCDC_CONF) & 0xffffffbc)| (uint32_t)0x1);  \n    WRITE_PERI_REG(RTC_GPIO_CONF, (READ_PERI_REG(RTC_GPIO_CONF) & (uint32_t)0xfffffffe)| (uint32_t)0x0); \n    WRITE_PERI_REG(RTC_GPIO_ENABLE, (READ_PERI_REG(RTC_GPIO_ENABLE) & (uint32_t)0xfffffffe)| (uint32_t)0x1); \n\n    //C\u1ea5u h\u00ecnh \u0111\u1ecba ch\u1ec9 h\u00e0m g\u1ecdi khi timer `led_timer` \u0111\u1ebfm xong \n    os_timer_setfn(&led_timer, (os_timer_func_t *)led_service_cb, NULL); \n\n    //C\u1ea5u h\u00ecnh `led_timer` t\u1edbi h\u1ea1n trong 1000 mili gi\u00e2y v\u00e0 kh\u1edfi \u0111\u1ed9ng l\u1ea1i khi t\u1edbi h\u1ea1n\n    os_timer_arm(&led_timer, 1000, 1); \n}\n\nvoid user_init(void)\n{\n    system_init_done_cb(app_init);\n}\n\n\n\n\n\u1ede ph\u1ea7n n\u00e0y ch\u00fang ta s\u1ebd bi\u1ebft th\u00eam v\u1ec1 c\u00e1ch th\u1ee9c \u0111\u1ecdc/ghi thanh ghi c\u1ee7a ESP8266, \u0111\u1ed3ng th\u1eddi s\u1eed d\u1ee5ng Software Timer:\n\n\n\n\n\u0110\u1ec3 ghi v\u00e0o thanh ghi, ch\u00fang ta d\u00f9ng \u0111\u1ecbnh ngh\u0129a: \nWRITE_PERI_REG\n v\u1edbi tham s\u1ed1 \u0111\u1ea7u ti\u00ean l\u00e0 \u0111\u1ecba ch\u1ec9 thanh ghi, th\u00f4ng s\u1ed1 th\u1ee9 2 l\u00e0 gi\u00e1 tr\u1ecb. T\u01b0\u01a1ng t\u1ef1 v\u1edbi vi\u1ec7c \u0111\u1ecdc, \u0111\u1ecbnh ngh\u0129a \nREAD_PERI_REG\n ch\u1ec9 c\u1ea7n 1 tham s\u1ed1 l\u00e0 \u0111\u1ecba ch\u1ec9 thanh ghi, v\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a thanh ghi.\n\n\nTr\u01b0\u1edbc khi s\u1eed d\u1ee5ng Software Timer, c\u1ea7n \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc bi\u1ebfn ch\u01b0a th\u00f4ng tin l\u00e0 \nos_timer_t led_timer\n, kh\u1edfi t\u1ea1o h\u00e0m s\u1ebd g\u1ecdi khi Timer \u0111\u1ebfn t\u1edbi h\u1ea1n v\u1edbi \nos_timer_setfn\n v\u00e0 \nos_timer_arm\n v\u1edbi tham s\u1ed1 th\u1ee9 3 = 1 \u0111\u1ea3m b\u1ea3o s\u1ebd l\u1eb7p l\u1ea1i vi\u1ec7c \u0111\u1ebfm li\u00ean t\u1ee5c.\n\n\n\n\nG\u1ee3i \u00fd\n#\n\n\nC\u00f3 th\u1ec3 t\u00ecm th\u1ea5y \u0111\u1ecbnh ngh\u0129a c\u00e1c \u0111\u1ecba ch\u1ec9 thanh ghi t\u1ea1i th\u01b0 m\u1ee5c ch\u1ee9a SDK \n$SDK_BASE\\include\\eagle_soc.h\n. Ngo\u00e0i ra, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o vi\u1ec7c c\u1ea5u h\u00ecnh GPIO16 t\u1ea1i \n$SDK_BASE\\driver_lib\\gpio16.c\n \n\n\nC\u1ea3nh b\u00e1o\n#\n\n\nCh\u00e2n \nGPIO16\n c\u1ee7a ESP8266 l\u00e0 ch\u00e2n kh\u00e1 \u0111\u1eb7c bi\u1ec7t, s\u1eed d\u1ee5ng chung v\u1edbi RTC OUTPUT, d\u00f9ng \u1edf ch\u1ebf \u0111\u1ed9 DEEPSLEEP, khi RTC t\u1edbi h\u1ea1n v\u00e0 kh\u1edfi \u0111\u1ed9ng Chip b\u1eb1ng c\u00e1ch h\u1ea1 m\u1ee9c th\u1ea5p ch\u00e2n n\u00e0y. N\u1ebfu b\u1ea1n thi\u1ebft k\u1ebf \u1ee9ng d\u1ee5ng c\u1ea7n s\u1eed d\u1ee5ng ch\u1ebf \u0111\u1ed9 ng\u1ee7 DEEPSLEEP th\u00ec \u0111\u1eebng s\u1eed d\u1ee5ng ch\u00e2n GPIO16 cho m\u1ee5c \u0111\u00edch kh\u00e1c, ngo\u1ea1i tr\u1eeb vi\u1ec7c n\u1ed1i th\u1eb3ng v\u00e0o ch\u00e2n nRST (ch\u00e2n \n32\n c\u1ee7a ESP8266)",
            "title": "B\u1eadt t\u1eaft LED"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/02-blink-led/#bat-tat-led",
            "text": "T\u01b0\u01a1ng t\u1ef1 nh\u01b0 vi\u1ec7c bi\u00ean d\u1ecbch d\u1ef1 \u00e1n m\u1eabu trong ph\u1ea7n tr\u01b0\u1edbc, to\u00e0n b\u1ed9 c\u1ea5u tr\u00fac file,  Makefile, user_config.h, rf_init.c  gi\u1eef nguy\u00ean, ch\u1ec9 thay \u0111\u1ed5i n\u1ed9i dung file  main.c . M\u1ee5c \u0111\u00edch: Ch\u1edbp t\u1eaft \u0111\u00e8n LED m\u1ed7i 1 gi\u00e2y.",
            "title": "B\u1eadt t\u1eaft LED"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/02-blink-led/#lay-du-an-ve-tu-github",
            "text": "git clone https://github.com/esp8266vn/esp-iot-led-blink.git\ncd esp-iot-led-blink && make",
            "title": "L\u1ea5y d\u1ef1 \u00e1n v\u1ec1 t\u1eeb Github:"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/02-blink-led/#ma-nguon",
            "text": "//esp-led/main.c\n#include <stdio.h>\n#include \"osapi.h\"\n#include \"user_interface.h\"\nstatic os_timer_t led_timer;\nstatic int led_value = 0;\nvoid led_service_cb(void *args) //H\u00e0m n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi khi soft timer `led_timer` ho\u00e0n th\u00e0nh vi\u1ec7c \u0111\u1ebfm \n{\n    led_value ^= 0x01;\n    WRITE_PERI_REG(RTC_GPIO_OUT, (READ_PERI_REG(RTC_GPIO_OUT) & (uint32_t)0xfffffffe)| (uint32_t)(led_value & 1)); //Ghi gi\u00e1 tr\u1ecb ra LED IO, `led_value` khi th\u1ef1c hi\u1ec7n **XOR** v\u1edbi 1 s\u1ebd \u0111\u1ea3o gi\u00e1 tr\u1ecb gi\u1eefa 1 v\u00e0 0\n    os_printf(\"Blink\\r\\n\");\n}\nvoid app_init()\n{\n    //C\u1ea5u h\u00ecnh ng\u00f5 ra UART 115200 baud\n    uart_div_modify(0, UART_CLK_FREQ / 115200); \n\n    //C\u1ea5u h\u00ecnh ch\u00e2n LED l\u00e0 ch\u1ee9c n\u0103ng ch\u00ednh GPIO, ng\u00f5 ra \n    WRITE_PERI_REG(PAD_XPD_DCDC_CONF, (READ_PERI_REG(PAD_XPD_DCDC_CONF) & 0xffffffbc)| (uint32_t)0x1);  \n    WRITE_PERI_REG(RTC_GPIO_CONF, (READ_PERI_REG(RTC_GPIO_CONF) & (uint32_t)0xfffffffe)| (uint32_t)0x0); \n    WRITE_PERI_REG(RTC_GPIO_ENABLE, (READ_PERI_REG(RTC_GPIO_ENABLE) & (uint32_t)0xfffffffe)| (uint32_t)0x1); \n\n    //C\u1ea5u h\u00ecnh \u0111\u1ecba ch\u1ec9 h\u00e0m g\u1ecdi khi timer `led_timer` \u0111\u1ebfm xong \n    os_timer_setfn(&led_timer, (os_timer_func_t *)led_service_cb, NULL); \n\n    //C\u1ea5u h\u00ecnh `led_timer` t\u1edbi h\u1ea1n trong 1000 mili gi\u00e2y v\u00e0 kh\u1edfi \u0111\u1ed9ng l\u1ea1i khi t\u1edbi h\u1ea1n\n    os_timer_arm(&led_timer, 1000, 1); \n}\n\nvoid user_init(void)\n{\n    system_init_done_cb(app_init);\n}  \u1ede ph\u1ea7n n\u00e0y ch\u00fang ta s\u1ebd bi\u1ebft th\u00eam v\u1ec1 c\u00e1ch th\u1ee9c \u0111\u1ecdc/ghi thanh ghi c\u1ee7a ESP8266, \u0111\u1ed3ng th\u1eddi s\u1eed d\u1ee5ng Software Timer:   \u0110\u1ec3 ghi v\u00e0o thanh ghi, ch\u00fang ta d\u00f9ng \u0111\u1ecbnh ngh\u0129a:  WRITE_PERI_REG  v\u1edbi tham s\u1ed1 \u0111\u1ea7u ti\u00ean l\u00e0 \u0111\u1ecba ch\u1ec9 thanh ghi, th\u00f4ng s\u1ed1 th\u1ee9 2 l\u00e0 gi\u00e1 tr\u1ecb. T\u01b0\u01a1ng t\u1ef1 v\u1edbi vi\u1ec7c \u0111\u1ecdc, \u0111\u1ecbnh ngh\u0129a  READ_PERI_REG  ch\u1ec9 c\u1ea7n 1 tham s\u1ed1 l\u00e0 \u0111\u1ecba ch\u1ec9 thanh ghi, v\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a thanh ghi.  Tr\u01b0\u1edbc khi s\u1eed d\u1ee5ng Software Timer, c\u1ea7n \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc bi\u1ebfn ch\u01b0a th\u00f4ng tin l\u00e0  os_timer_t led_timer , kh\u1edfi t\u1ea1o h\u00e0m s\u1ebd g\u1ecdi khi Timer \u0111\u1ebfn t\u1edbi h\u1ea1n v\u1edbi  os_timer_setfn  v\u00e0  os_timer_arm  v\u1edbi tham s\u1ed1 th\u1ee9 3 = 1 \u0111\u1ea3m b\u1ea3o s\u1ebd l\u1eb7p l\u1ea1i vi\u1ec7c \u0111\u1ebfm li\u00ean t\u1ee5c.",
            "title": "M\u00e3 ngu\u1ed3n"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/02-blink-led/#goi-y",
            "text": "C\u00f3 th\u1ec3 t\u00ecm th\u1ea5y \u0111\u1ecbnh ngh\u0129a c\u00e1c \u0111\u1ecba ch\u1ec9 thanh ghi t\u1ea1i th\u01b0 m\u1ee5c ch\u1ee9a SDK  $SDK_BASE\\include\\eagle_soc.h . Ngo\u00e0i ra, b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o vi\u1ec7c c\u1ea5u h\u00ecnh GPIO16 t\u1ea1i  $SDK_BASE\\driver_lib\\gpio16.c",
            "title": "G\u1ee3i \u00fd"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/02-blink-led/#canh-bao",
            "text": "Ch\u00e2n  GPIO16  c\u1ee7a ESP8266 l\u00e0 ch\u00e2n kh\u00e1 \u0111\u1eb7c bi\u1ec7t, s\u1eed d\u1ee5ng chung v\u1edbi RTC OUTPUT, d\u00f9ng \u1edf ch\u1ebf \u0111\u1ed9 DEEPSLEEP, khi RTC t\u1edbi h\u1ea1n v\u00e0 kh\u1edfi \u0111\u1ed9ng Chip b\u1eb1ng c\u00e1ch h\u1ea1 m\u1ee9c th\u1ea5p ch\u00e2n n\u00e0y. N\u1ebfu b\u1ea1n thi\u1ebft k\u1ebf \u1ee9ng d\u1ee5ng c\u1ea7n s\u1eed d\u1ee5ng ch\u1ebf \u0111\u1ed9 ng\u1ee7 DEEPSLEEP th\u00ec \u0111\u1eebng s\u1eed d\u1ee5ng ch\u00e2n GPIO16 cho m\u1ee5c \u0111\u00edch kh\u00e1c, ngo\u1ea1i tr\u1eeb vi\u1ec7c n\u1ed1i th\u1eb3ng v\u00e0o ch\u00e2n nRST (ch\u00e2n  32  c\u1ee7a ESP8266)",
            "title": "C\u1ea3nh b\u00e1o"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/03-button/",
            "text": "N\u00fat nh\u1ea5n\n#\n\n\nM\u00e3 ngu\u1ed3n copy to\u00e0n b\u1ed9 t\u1ef1 d\u1ef1 \u00e1n tr\u01b0\u1edbc, bao g\u1ed3m c\u00e1c file \nMakefile\n, \nmain.c\n, \nrf_init.c\n, \nuser_config.h\n. Tuy nhi\u00ean ch\u1ec9 thay \u0111\u1ed5i n\u1ed9i dung file \nmain.c\n\n\nB\u1ea1n c\u00f3 th\u1ec3 t\u1ea3i v\u00e0 bi\u00ean d\u1ecbch tr\u1ef1c ti\u1ebfp t\u1eeb github: \n\n\ngit clone https://github.com/esp8266vn/eps-iot-button\ncd eps-iot-button\nmake\n\n\n\n\n//esp-button/main.c\n#include \"osapi.h\"\n#include \"user_interface.h\"\n#include \"gpio.h\"\n#define BTN_PIN 0 //GPIO0 \nstatic int led_value = 0;\nvoid key_intr_handler(void *args); //Khai b\u00e1o `prototype` \nvoid app_init()\n{\n    //C\u1ea5u h\u00ecnh ch\u00e2n GPIO16 l\u00e0 ng\u00f5 ra, \u0111i\u1ec1u khi\u1ec3n \u0111\u00e8n LED\n  WRITE_PERI_REG(PAD_XPD_DCDC_CONF, (READ_PERI_REG(PAD_XPD_DCDC_CONF) & 0xffffffbc) | (uint32_t)0x1);\n\n  //C\u1ea5u h\u00ecnh ch\u00e2n GPIO16 l\u00e0 ng\u00f5 ra, \u0111i\u1ec1u khi\u1ec3n \u0111\u00e8n LED\n  WRITE_PERI_REG(RTC_GPIO_CONF, (READ_PERI_REG(RTC_GPIO_CONF) & (uint32_t)0xfffffffe) | (uint32_t)0x0);\n  WRITE_PERI_REG(RTC_GPIO_ENABLE,(READ_PERI_REG(RTC_GPIO_ENABLE) & (uint32_t)0xfffffffe) | (uint32_t)0x1);\n\n  //C\u1ea5u h\u00ecnh `key_intr_handler` l\u00e0 h\u00e0m x\u1eed l\u00fd ng\u1eaft GPIO\n  ETS_GPIO_INTR_ATTACH(key_intr_handler, NULL);\n\n  //V\u00f4 hi\u1ec7u h\u00f3a ng\u1eaft GPIO \u0111\u1ec3 vi\u1ec7c c\u1ea5u h\u00ecnh kh\u00f4ng \u1ea3nh h\u01b0\u1edfng\n  ETS_GPIO_INTR_DISABLE();\n\n  //L\u1ef1a ch\u1ecdn ch\u1ee9c n\u0103ng cho GPIO0 s\u1eed d\u1ee5ng In/Out Logic\n  PIN_FUNC_SELECT(PERIPHS_IO_MUX_GPIO0_U, FUNC_GPIO0);\n\n  //C\u1ea5u h\u00ecnh GPIO0 ho\u1ea1t \u0111\u1ed9ng nh\u01b0 ng\u00f5 v\u00e0o (Input)\n  gpio_output_set(0, 0, 0, GPIO_ID_PIN(BTN_PIN));\n  gpio_register_set(GPIO_PIN_ADDR(BTN_PIN), GPIO_PIN_INT_TYPE_SET(GPIO_PIN_INTR_DISABLE)\n                      | GPIO_PIN_PAD_DRIVER_SET(GPIO_PAD_DRIVER_DISABLE)\n                      | GPIO_PIN_SOURCE_SET(GPIO_AS_PIN_SOURCE));\n\n  //X\u00f3a c\u1edd ng\u1eaft GPIO\n  GPIO_REG_WRITE(GPIO_STATUS_W1TC_ADDRESS, BIT(BTN_PIN));\n\n  //C\u1ea5u h\u00ecnh ng\u1eaft GPIO0 c\u1ea1nh xu\u1ed1ng\n  gpio_pin_intr_state_set(GPIO_ID_PIN(BTN_PIN), GPIO_PIN_INTR_NEGEDGE);\n\n  //Cho ph\u00e9p ng\u1eaft GPIO\n  ETS_GPIO_INTR_ENABLE();\n}\nvoid user_init(void)\n{\n  system_init_done_cb(app_init);\n}\nvoid key_intr_handler(void *args)\n{\n  //\u0110\u1ecdc tr\u1ea1ng th\u00e1i ng\u1eaft GPIO hi\u1ec7n t\u1ea1i\n  uint32 gpio_status = GPIO_REG_READ(GPIO_STATUS_ADDRESS);\n  if (gpio_status & BIT(BTN_PIN)) { //Ch\u1eafc ch\u1eafn r\u1eb1ng ng\u1eaft xu\u1ea5t ph\u00e1t t\u1eeb GPIO0\n    //Ghi gi\u00e1 tr\u1ecb \u0111\u1ea3o \u0111\u1ec3 hi\u1ec3n th\u1ecb LED\n    led_value ^= 0x01;\n    led_value ^= 0x01;\n    WRITE_PERI_REG(RTC_GPIO_OUT, (READ_PERI_REG(RTC_GPIO_OUT) & (uint32_t)0xfffffffe) | (uint32_t)(led_value & 1));\n  }\n  GPIO_REG_WRITE(GPIO_STATUS_W1TC_ADDRESS, BIT(BTN_PIN));  //X\u00f3a ng\u1eaft GPIO\n}\n\n\n\n\nN\u00fat nh\u1ea5n s\u1ebd gi\u00fap vi\u1ec7c ESP8266 kh\u1edfi \u0111\u1ed9ng m\u1ed9t h\u00e0nh \u0111\u1ed9ng n\u00e0o \u0111\u00f3 khi c\u1ea7n thi\u1ebft. Trong nhi\u1ec1u \u1ee9ng d\u1ee5ng ch\u00fang ta h\u1ea7u nh\u01b0 \u0111\u1ec1u c\u1ea7n nh\u1eefng k\u00edch ho\u1ea1t t\u1eeb b\u00ean ngo\u00e0i. Xuy\u00ean su\u1ed1t cu\u1ed1n s\u00e1ch n\u00e0y, s\u1ebd d\u00f9ng n\u00fat nh\u1ea5n \u0111\u1ec3 k\u00edch ho\u1ea1t ch\u1ea1y c\u00e1c \u1ee9ng d\u1ee5ng m\u1eabu c\u0169ng nh\u01b0 \u0111\u00e8n LED \u0111\u1ec3 th\u00f4ng b\u00e1o c\u00e1c tr\u1ea1ng th\u00e1i. Trong ph\u1ea7n n\u00e0y, nh\u1ea5n n\u00fat \u0111\u00e8n LED s\u1ebd chuy\u1ec3n tr\u1ea1ng th\u00e1i (t\u1eeb s\u00e1ng -> t\u1eaft v\u00e0 ng\u01b0\u1ee3c l\u1ea1i). \n\n\n\u0110\u00e2y l\u00e0 v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n, trong th\u1ef1c t\u1ebf vi\u1ec7c x\u1eed l\u00fd n\u00fat nh\u1ea5n kh\u00e1 phi\u1ec1n ph\u1ee9c. B\u1edfi v\u00ec n\u00fat nh\u1ea5n v\u1eadt l\u00fd khi \u0111\u01b0\u1ee3c nh\u1ea5n s\u1ebd t\u1ea1o ra h\u00e0ng lo\u1ea1t c\u00e1c xung l\u00ean xu\u1ed1ng (nhi\u1ec5u, bouncing\u2026). Th\u01b0\u1eddng th\u00ec ch\u1ec9 c\u1ea7n \u0111\u1ea3m b\u1ea3o m\u1ee9c Logic c\u1ee7a ch\u00e2n \u0111o \u0111\u01b0\u1ee3c \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1eef \u1ed5n \u0111\u1ecbnh trong kho\u1ea3ng 100 mili gi\u00e2y l\u00e0 \u0111\u01b0\u1ee3c xem \u0111\u00e3 \u1ed5n \u0111\u1ecbnh. \n\n\nNgo\u00e0i c\u00e1ch d\u00f9ng ng\u1eaft \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh n\u00fat nh\u1ea5n c\u00f3 \u0111\u01b0\u1ee3c nh\u1ea5n hay kh\u00f4ng - c\u00e1ch n\u00e0y s\u1ebd ti\u1ebft ki\u1ec7m t\u00e0i nguy\u00ean t\u00ednh to\u00e1n c\u1ee7a CPU, n\u00f3 ch\u1ec9 \u0111\u01b0\u1ee3c g\u1ecdi khi c\u00f3 s\u1ef1 ki\u1ec7n s\u1ea3y ra, th\u00ec c\u00f2n m\u1ed9t c\u00e1ch n\u1eefa l\u00e0 h\u1ecfi v\u00f2ng: C\u00e1ch n\u00e0y \u0111\u1ecfi h\u1ecfi CPU li\u00ean t\u1ee5c ki\u1ec3m tra xem m\u1ee9c Logic c\u1ee7a n\u00fat nh\u1ea5n. \u0110\u1ed3ng th\u1eddi vi\u1ec7c \u0111\u00e1p \u1ee9ng c\u0169ng kh\u00f4ng nhanh b\u1eb1ng s\u1eed d\u1ee5ng ng\u1eaft.",
            "title": "N\u00fat nh\u1ea5n"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/03-button/#nut-nhan",
            "text": "M\u00e3 ngu\u1ed3n copy to\u00e0n b\u1ed9 t\u1ef1 d\u1ef1 \u00e1n tr\u01b0\u1edbc, bao g\u1ed3m c\u00e1c file  Makefile ,  main.c ,  rf_init.c ,  user_config.h . Tuy nhi\u00ean ch\u1ec9 thay \u0111\u1ed5i n\u1ed9i dung file  main.c  B\u1ea1n c\u00f3 th\u1ec3 t\u1ea3i v\u00e0 bi\u00ean d\u1ecbch tr\u1ef1c ti\u1ebfp t\u1eeb github:   git clone https://github.com/esp8266vn/eps-iot-button\ncd eps-iot-button\nmake  //esp-button/main.c\n#include \"osapi.h\"\n#include \"user_interface.h\"\n#include \"gpio.h\"\n#define BTN_PIN 0 //GPIO0 \nstatic int led_value = 0;\nvoid key_intr_handler(void *args); //Khai b\u00e1o `prototype` \nvoid app_init()\n{\n    //C\u1ea5u h\u00ecnh ch\u00e2n GPIO16 l\u00e0 ng\u00f5 ra, \u0111i\u1ec1u khi\u1ec3n \u0111\u00e8n LED\n  WRITE_PERI_REG(PAD_XPD_DCDC_CONF, (READ_PERI_REG(PAD_XPD_DCDC_CONF) & 0xffffffbc) | (uint32_t)0x1);\n\n  //C\u1ea5u h\u00ecnh ch\u00e2n GPIO16 l\u00e0 ng\u00f5 ra, \u0111i\u1ec1u khi\u1ec3n \u0111\u00e8n LED\n  WRITE_PERI_REG(RTC_GPIO_CONF, (READ_PERI_REG(RTC_GPIO_CONF) & (uint32_t)0xfffffffe) | (uint32_t)0x0);\n  WRITE_PERI_REG(RTC_GPIO_ENABLE,(READ_PERI_REG(RTC_GPIO_ENABLE) & (uint32_t)0xfffffffe) | (uint32_t)0x1);\n\n  //C\u1ea5u h\u00ecnh `key_intr_handler` l\u00e0 h\u00e0m x\u1eed l\u00fd ng\u1eaft GPIO\n  ETS_GPIO_INTR_ATTACH(key_intr_handler, NULL);\n\n  //V\u00f4 hi\u1ec7u h\u00f3a ng\u1eaft GPIO \u0111\u1ec3 vi\u1ec7c c\u1ea5u h\u00ecnh kh\u00f4ng \u1ea3nh h\u01b0\u1edfng\n  ETS_GPIO_INTR_DISABLE();\n\n  //L\u1ef1a ch\u1ecdn ch\u1ee9c n\u0103ng cho GPIO0 s\u1eed d\u1ee5ng In/Out Logic\n  PIN_FUNC_SELECT(PERIPHS_IO_MUX_GPIO0_U, FUNC_GPIO0);\n\n  //C\u1ea5u h\u00ecnh GPIO0 ho\u1ea1t \u0111\u1ed9ng nh\u01b0 ng\u00f5 v\u00e0o (Input)\n  gpio_output_set(0, 0, 0, GPIO_ID_PIN(BTN_PIN));\n  gpio_register_set(GPIO_PIN_ADDR(BTN_PIN), GPIO_PIN_INT_TYPE_SET(GPIO_PIN_INTR_DISABLE)\n                      | GPIO_PIN_PAD_DRIVER_SET(GPIO_PAD_DRIVER_DISABLE)\n                      | GPIO_PIN_SOURCE_SET(GPIO_AS_PIN_SOURCE));\n\n  //X\u00f3a c\u1edd ng\u1eaft GPIO\n  GPIO_REG_WRITE(GPIO_STATUS_W1TC_ADDRESS, BIT(BTN_PIN));\n\n  //C\u1ea5u h\u00ecnh ng\u1eaft GPIO0 c\u1ea1nh xu\u1ed1ng\n  gpio_pin_intr_state_set(GPIO_ID_PIN(BTN_PIN), GPIO_PIN_INTR_NEGEDGE);\n\n  //Cho ph\u00e9p ng\u1eaft GPIO\n  ETS_GPIO_INTR_ENABLE();\n}\nvoid user_init(void)\n{\n  system_init_done_cb(app_init);\n}\nvoid key_intr_handler(void *args)\n{\n  //\u0110\u1ecdc tr\u1ea1ng th\u00e1i ng\u1eaft GPIO hi\u1ec7n t\u1ea1i\n  uint32 gpio_status = GPIO_REG_READ(GPIO_STATUS_ADDRESS);\n  if (gpio_status & BIT(BTN_PIN)) { //Ch\u1eafc ch\u1eafn r\u1eb1ng ng\u1eaft xu\u1ea5t ph\u00e1t t\u1eeb GPIO0\n    //Ghi gi\u00e1 tr\u1ecb \u0111\u1ea3o \u0111\u1ec3 hi\u1ec3n th\u1ecb LED\n    led_value ^= 0x01;\n    led_value ^= 0x01;\n    WRITE_PERI_REG(RTC_GPIO_OUT, (READ_PERI_REG(RTC_GPIO_OUT) & (uint32_t)0xfffffffe) | (uint32_t)(led_value & 1));\n  }\n  GPIO_REG_WRITE(GPIO_STATUS_W1TC_ADDRESS, BIT(BTN_PIN));  //X\u00f3a ng\u1eaft GPIO\n}  N\u00fat nh\u1ea5n s\u1ebd gi\u00fap vi\u1ec7c ESP8266 kh\u1edfi \u0111\u1ed9ng m\u1ed9t h\u00e0nh \u0111\u1ed9ng n\u00e0o \u0111\u00f3 khi c\u1ea7n thi\u1ebft. Trong nhi\u1ec1u \u1ee9ng d\u1ee5ng ch\u00fang ta h\u1ea7u nh\u01b0 \u0111\u1ec1u c\u1ea7n nh\u1eefng k\u00edch ho\u1ea1t t\u1eeb b\u00ean ngo\u00e0i. Xuy\u00ean su\u1ed1t cu\u1ed1n s\u00e1ch n\u00e0y, s\u1ebd d\u00f9ng n\u00fat nh\u1ea5n \u0111\u1ec3 k\u00edch ho\u1ea1t ch\u1ea1y c\u00e1c \u1ee9ng d\u1ee5ng m\u1eabu c\u0169ng nh\u01b0 \u0111\u00e8n LED \u0111\u1ec3 th\u00f4ng b\u00e1o c\u00e1c tr\u1ea1ng th\u00e1i. Trong ph\u1ea7n n\u00e0y, nh\u1ea5n n\u00fat \u0111\u00e8n LED s\u1ebd chuy\u1ec3n tr\u1ea1ng th\u00e1i (t\u1eeb s\u00e1ng -> t\u1eaft v\u00e0 ng\u01b0\u1ee3c l\u1ea1i).   \u0110\u00e2y l\u00e0 v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n, trong th\u1ef1c t\u1ebf vi\u1ec7c x\u1eed l\u00fd n\u00fat nh\u1ea5n kh\u00e1 phi\u1ec1n ph\u1ee9c. B\u1edfi v\u00ec n\u00fat nh\u1ea5n v\u1eadt l\u00fd khi \u0111\u01b0\u1ee3c nh\u1ea5n s\u1ebd t\u1ea1o ra h\u00e0ng lo\u1ea1t c\u00e1c xung l\u00ean xu\u1ed1ng (nhi\u1ec5u, bouncing\u2026). Th\u01b0\u1eddng th\u00ec ch\u1ec9 c\u1ea7n \u0111\u1ea3m b\u1ea3o m\u1ee9c Logic c\u1ee7a ch\u00e2n \u0111o \u0111\u01b0\u1ee3c \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1eef \u1ed5n \u0111\u1ecbnh trong kho\u1ea3ng 100 mili gi\u00e2y l\u00e0 \u0111\u01b0\u1ee3c xem \u0111\u00e3 \u1ed5n \u0111\u1ecbnh.   Ngo\u00e0i c\u00e1ch d\u00f9ng ng\u1eaft \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh n\u00fat nh\u1ea5n c\u00f3 \u0111\u01b0\u1ee3c nh\u1ea5n hay kh\u00f4ng - c\u00e1ch n\u00e0y s\u1ebd ti\u1ebft ki\u1ec7m t\u00e0i nguy\u00ean t\u00ednh to\u00e1n c\u1ee7a CPU, n\u00f3 ch\u1ec9 \u0111\u01b0\u1ee3c g\u1ecdi khi c\u00f3 s\u1ef1 ki\u1ec7n s\u1ea3y ra, th\u00ec c\u00f2n m\u1ed9t c\u00e1ch n\u1eefa l\u00e0 h\u1ecfi v\u00f2ng: C\u00e1ch n\u00e0y \u0111\u1ecfi h\u1ecfi CPU li\u00ean t\u1ee5c ki\u1ec3m tra xem m\u1ee9c Logic c\u1ee7a n\u00fat nh\u1ea5n. \u0110\u1ed3ng th\u1eddi vi\u1ec7c \u0111\u00e1p \u1ee9ng c\u0169ng kh\u00f4ng nhanh b\u1eb1ng s\u1eed d\u1ee5ng ng\u1eaft.",
            "title": "N\u00fat nh\u1ea5n"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/04-uart/",
            "text": "UART\n#",
            "title": "UART"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/04-uart/#uart",
            "text": "",
            "title": "UART"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/05-task/",
            "text": "Task\n#",
            "title": "Task"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/05-task/#task",
            "text": "",
            "title": "Task"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/06-wifi/",
            "text": "",
            "title": "Wifi"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/07-espconn/",
            "text": "",
            "title": "ESPCONN"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/08-mdns/",
            "text": "",
            "title": "MDNS"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/09-ntp/",
            "text": "",
            "title": "NTP"
        },
        {
            "location": "/nonos-sdk/01-esp-basic/10-save-to-flash/",
            "text": "",
            "title": "L\u01b0u d\u1eef li\u1ec7u v\u00e0o Flash"
        },
        {
            "location": "/nonos-sdk/02-esp-smartconfig/00-esp-smartconfig/",
            "text": "ESP8266 Smart config\n#",
            "title": "ESP8266 Smartconfig"
        },
        {
            "location": "/nonos-sdk/02-esp-smartconfig/00-esp-smartconfig/#esp8266-smart-config",
            "text": "",
            "title": "ESP8266 Smart config"
        },
        {
            "location": "/nonos-sdk/02-esp-smartconfig/01-why-smartconfig/",
            "text": "T\u1ea1i sao c\u1ea7n Smartconfig\n#",
            "title": "T\u1ea1i sao c\u1ea7n Smartconfig"
        },
        {
            "location": "/nonos-sdk/02-esp-smartconfig/01-why-smartconfig/#tai-sao-can-smartconfig",
            "text": "",
            "title": "T\u1ea1i sao c\u1ea7n Smartconfig"
        },
        {
            "location": "/nonos-sdk/02-esp-smartconfig/02-esptouch/",
            "text": "",
            "title": "ESPTOUCH & AIRKISS"
        },
        {
            "location": "/nonos-sdk/02-esp-smartconfig/03-wps/",
            "text": "",
            "title": "WPS"
        },
        {
            "location": "/nonos-sdk/03-esp-mqtt/00-esp-mqtt/",
            "text": "",
            "title": "ESP8266 MQTT"
        },
        {
            "location": "/nonos-sdk/04-esp-http-client/00-esp-http-client/",
            "text": "",
            "title": "ESP8266 HTTP Client"
        },
        {
            "location": "/nonos-sdk/05-esp-http-server/00-esp-http-server/",
            "text": "",
            "title": "ESP8266 HTTP Server"
        },
        {
            "location": "/nonos-sdk/06-esp-fota/00-esp-fota/",
            "text": "",
            "title": "FOTA"
        },
        {
            "location": "/nonos-sdk/07-esp-now/00-esp-now/",
            "text": "",
            "title": "ESP Now"
        },
        {
            "location": "/nonos-sdk/08-esp-mesh/00-esp-mesh/",
            "text": "",
            "title": "ESP Mesh"
        },
        {
            "location": "/freertos-sdk/freertos-sdk/",
            "text": "FreeRTOS SDK\n#",
            "title": "Gi\u1edbi thi\u1ec7u"
        },
        {
            "location": "/freertos-sdk/freertos-sdk/#freertos-sdk",
            "text": "",
            "title": "FreeRTOS SDK"
        },
        {
            "location": "/freertos-sdk/00-freertos-basic/00-basic/",
            "text": "FreeRTOS SDK c\u01a1 b\u1ea3n\n#",
            "title": "C\u00e0i \u0111\u1eb7t c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft"
        },
        {
            "location": "/freertos-sdk/00-freertos-basic/00-basic/#freertos-sdk-co-ban",
            "text": "",
            "title": "FreeRTOS SDK c\u01a1 b\u1ea3n"
        },
        {
            "location": "/arduino/arduino/",
            "text": "ARDUINO\n#",
            "title": "Gi\u1edbi thi\u1ec7u"
        },
        {
            "location": "/arduino/arduino/#arduino",
            "text": "",
            "title": "ARDUINO"
        },
        {
            "location": "/arduino/00-arduino-basic/00-basic/",
            "text": "Arduino c\u01a1 b\u1ea3n\n#\n\n\nC\u00e0i \u0111\u1eb7t\n#",
            "title": "C\u00e0i \u0111\u1eb7t c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft"
        },
        {
            "location": "/arduino/00-arduino-basic/00-basic/#arduino-co-ban",
            "text": "",
            "title": "Arduino c\u01a1 b\u1ea3n"
        },
        {
            "location": "/arduino/00-arduino-basic/00-basic/#cai-at",
            "text": "",
            "title": "C\u00e0i \u0111\u1eb7t"
        },
        {
            "location": "/micropython/micropython/",
            "text": "ESP8266 Micropython\n#",
            "title": "Gi\u1edbi thi\u1ec7u"
        },
        {
            "location": "/micropython/micropython/#esp8266-micropython",
            "text": "",
            "title": "ESP8266 Micropython"
        },
        {
            "location": "/micropython/00-ucpython-basic/00-basic/",
            "text": "C\u00e0i \u0111\u1eb7t\n#",
            "title": "C\u00e0i \u0111\u1eb7t c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft"
        },
        {
            "location": "/micropython/00-ucpython-basic/00-basic/#cai-at",
            "text": "",
            "title": "C\u00e0i \u0111\u1eb7t"
        },
        {
            "location": "/projects/projects/",
            "text": "C\u00e1c d\u1ef1 \u00e1n\n#",
            "title": "C\u00e1c d\u1ef1 \u00e1n"
        },
        {
            "location": "/projects/projects/#cac-du-an",
            "text": "",
            "title": "C\u00e1c d\u1ef1 \u00e1n"
        },
        {
            "location": "/license/",
            "text": "B\u1ea3n quy\u1ec1n\n#\n\n\nTo\u00e0n b\u1ed9 t\u00e0i li\u1ec7u \u0111\u01b0\u1ee3c ph\u00e2n ph\u1ed1i theo gi\u1ea5y ph\u00e9p CC BY-SA-NC\n\n\nGhi nh\u00e2\u0323n \u0111o\u0301ng go\u0301p Phi Th\u01b0\u01a1ng ma\u0323i Chia se\u0309 v\u01a1\u0301i \u0110i\u00ea\u0300u ki\u00ea\u0323n Nh\u01b0 nhau (cc by-nc-sa):\nGi\u00e2\u0301y phe\u0301p na\u0300y cho phe\u0301p ng\u01b0\u01a1\u0300i kha\u0301c ph\u00f4\u0301i la\u0323i, tu\u0300y chi\u0309nh, va\u0300 x\u00e2y d\u01b0\u0323ng d\u01b0\u0323a tr\u00ean ta\u0301c ph\u00e2\u0309m cu\u0309a Ba\u0323n v\u01a1\u0301i mu\u0323c \u0111i\u0301ch Phi Th\u01b0\u01a1ng ma\u0323i, v\u01a1\u0301i \u0111i\u00ea\u0300u ki\u00ea\u0323n chu\u0301ng n\u00e2ng cao uy ti\u0301n cu\u0309a Ba\u0323n v\u00e0 cho phe\u0301p c\u00e2\u0301p phe\u0301p \u0111\u00f4\u0301i v\u01a1\u0301i ca\u0301c ta\u0301c ph\u00e2\u0309m sa\u0301ng ta\u0323o m\u01a1\u0301i cu\u0309a ho\u0323 theo ca\u0301c \u0111i\u00ea\u0300u khoa\u0309n gi\u00f4\u0301ng h\u00ea\u0323t.\n\n\nB\u1ea5t k\u1ef3 m\u1ee5c \u0111\u00edch s\u1eed d\u1ee5ng n\u00e0o li\u00ean quan t\u1edbi th\u01b0\u01a1ng m\u1ea1i h\u00f3a, bao g\u1ed3m, s\u1eed d\u1ee5ng v\u1edbi m\u1ee5c \u0111\u00edch gi\u1ea3ng d\u1ea1y, \u0111\u00e0o t\u1ea1o thu ti\u1ec1n h\u1ecdc vi\u00ean b\u1eaft bu\u1ed9c ph\u1ea3i c\u00f3 s\u1ef1 \u0111\u1ed3ng \u00fd b\u1eb1ng v\u0103n b\u1ea3n t\u1eeb t\u00e1c gi\u1ea3.\n\n\nVui l\u00f2ng li\u00ean h\u1ec7: tuanpm [at] live [dot] com",
            "title": "B\u1ea3n quy\u1ec1n"
        },
        {
            "location": "/license/#ban-quyen",
            "text": "To\u00e0n b\u1ed9 t\u00e0i li\u1ec7u \u0111\u01b0\u1ee3c ph\u00e2n ph\u1ed1i theo gi\u1ea5y ph\u00e9p CC BY-SA-NC  Ghi nh\u00e2\u0323n \u0111o\u0301ng go\u0301p Phi Th\u01b0\u01a1ng ma\u0323i Chia se\u0309 v\u01a1\u0301i \u0110i\u00ea\u0300u ki\u00ea\u0323n Nh\u01b0 nhau (cc by-nc-sa):\nGi\u00e2\u0301y phe\u0301p na\u0300y cho phe\u0301p ng\u01b0\u01a1\u0300i kha\u0301c ph\u00f4\u0301i la\u0323i, tu\u0300y chi\u0309nh, va\u0300 x\u00e2y d\u01b0\u0323ng d\u01b0\u0323a tr\u00ean ta\u0301c ph\u00e2\u0309m cu\u0309a Ba\u0323n v\u01a1\u0301i mu\u0323c \u0111i\u0301ch Phi Th\u01b0\u01a1ng ma\u0323i, v\u01a1\u0301i \u0111i\u00ea\u0300u ki\u00ea\u0323n chu\u0301ng n\u00e2ng cao uy ti\u0301n cu\u0309a Ba\u0323n v\u00e0 cho phe\u0301p c\u00e2\u0301p phe\u0301p \u0111\u00f4\u0301i v\u01a1\u0301i ca\u0301c ta\u0301c ph\u00e2\u0309m sa\u0301ng ta\u0323o m\u01a1\u0301i cu\u0309a ho\u0323 theo ca\u0301c \u0111i\u00ea\u0300u khoa\u0309n gi\u00f4\u0301ng h\u00ea\u0323t.  B\u1ea5t k\u1ef3 m\u1ee5c \u0111\u00edch s\u1eed d\u1ee5ng n\u00e0o li\u00ean quan t\u1edbi th\u01b0\u01a1ng m\u1ea1i h\u00f3a, bao g\u1ed3m, s\u1eed d\u1ee5ng v\u1edbi m\u1ee5c \u0111\u00edch gi\u1ea3ng d\u1ea1y, \u0111\u00e0o t\u1ea1o thu ti\u1ec1n h\u1ecdc vi\u00ean b\u1eaft bu\u1ed9c ph\u1ea3i c\u00f3 s\u1ef1 \u0111\u1ed3ng \u00fd b\u1eb1ng v\u0103n b\u1ea3n t\u1eeb t\u00e1c gi\u1ea3.  Vui l\u00f2ng li\u00ean h\u1ec7: tuanpm [at] live [dot] com",
            "title": "B\u1ea3n quy\u1ec1n"
        },
        {
            "location": "/contributor/",
            "text": "Danh s\u00e1ch th\u00e0nh vi\u00ean \u0111\u00f3ng g\u00f3p:\n#\n\n\n\n\nTu\u1ea5n PM\n\n\nTr\u1ecbnh \u0110\u1ee9c\n\n\nH\u1ecdc ARM",
            "title": "\u0110\u00f3ng g\u00f3p"
        },
        {
            "location": "/contributor/#danh-sach-thanh-vien-ong-gop",
            "text": "Tu\u1ea5n PM  Tr\u1ecbnh \u0110\u1ee9c  H\u1ecdc ARM",
            "title": "Danh s\u00e1ch th\u00e0nh vi\u00ean \u0111\u00f3ng g\u00f3p:"
        }
    ]
}